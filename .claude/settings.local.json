{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Read(//Users/dtannen/.claude/stacks/**)",
      "mcp__serena__read_file",
      "Bash(npm run build:*)",
      "mcp__serena__replace_regex",
      "Bash(npm publish:*)",
      "mcp__serena__list_dir",
      "mcp__serena__list_dir",
      "mcp__serena__activate_project",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__onboarding",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__execute_shell_command",
      "mcp__serena__find_file",
      "mcp__serena__find_file",
      "mcp__serena__write_memory",
      "mcp__serena__search_for_pattern",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__find_symbol",
      "mcp__serena__create_text_file",
      "Bash(node dist/cli.js --help)",
      "Bash(node:*)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(npx husky:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(grep:*)",
      "Bash(npx eslint:*)",
      "Bash(npx prettier:*)",
      "mcp__serena__read_memory",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__read_memory",
      "mcp__serena__replace_symbol_body",
      "Bash(npm test:*)",
      "Bash(npx jest:*)",
      "mcp__serena__insert_after_symbol",
      "Bash(npx tsc:*)",
      "mcp__serena__insert_before_symbol",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  },
  "model": "opusplan",
  "hooks": {
    "Stop": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "bash -c 'json_input=$(cat); cwd=$(echo \"$json_input\" | jq -r \".cwd\" | xargs basename); if command -v osascript >/dev/null 2>&1; then osascript -e \"display notification \\\"Claude completed task in $cwd\\\" with title \\\"Claude Code\\\"\"; elif command -v notify-send >/dev/null 2>&1; then notify-send \"Claude Code\" \"Claude completed task in $cwd\"; fi'"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "~/.claude/ccline/ccline",
    "padding": 0
  },
  "feedbackSurveyState": {
    "lastShownTime": 1754085414877
  }
}