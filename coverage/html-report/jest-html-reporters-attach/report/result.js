window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":27,"numPassedTests":706,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":28,"numTotalTests":707,"startTime":1756185506819,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":41,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507227,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":215,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/export.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Export Action","Basic Export Functionality"],"duration":3,"failureMessages":[],"fullName":"Export Action Basic Export Functionality should export a basic stack with default options","status":"passed","title":"should export a basic stack with default options"},{"ancestorTitles":["Export Action","Basic Export Functionality"],"duration":1,"failureMessages":[],"fullName":"Export Action Basic Export Functionality should use custom name and description when provided","status":"passed","title":"should use custom name and description when provided"},{"ancestorTitles":["Export Action","Basic Export Functionality"],"duration":0,"failureMessages":[],"fullName":"Export Action Basic Export Functionality should generate default filename from directory name","status":"passed","title":"should generate default filename from directory name"},{"ancestorTitles":["Export Action","Basic Export Functionality"],"duration":0,"failureMessages":[],"fullName":"Export Action Basic Export Functionality should add .json extension if missing","status":"passed","title":"should add .json extension if missing"},{"ancestorTitles":["Export Action","Commands and Agents Collection"],"duration":1,"failureMessages":[],"fullName":"Export Action Commands and Agents Collection should collect local commands when they exist","status":"passed","title":"should collect local commands when they exist"},{"ancestorTitles":["Export Action","Commands and Agents Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action Commands and Agents Collection should collect local agents when they exist","status":"passed","title":"should collect local agents when they exist"},{"ancestorTitles":["Export Action","Commands and Agents Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action Commands and Agents Collection should include global commands and agents when includeGlobal is true","status":"passed","title":"should include global commands and agents when includeGlobal is true"},{"ancestorTitles":["Export Action","MCP Server Collection"],"duration":1,"failureMessages":[],"fullName":"Export Action MCP Server Collection should collect MCP servers from claude.json","status":"passed","title":"should collect MCP servers from claude.json"},{"ancestorTitles":["Export Action","MCP Server Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action MCP Server Collection should handle missing claude.json file","status":"passed","title":"should handle missing claude.json file"},{"ancestorTitles":["Export Action","MCP Server Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action MCP Server Collection should handle claude.json parsing errors","status":"passed","title":"should handle claude.json parsing errors"},{"ancestorTitles":["Export Action","Settings Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action Settings Collection should collect local settings","status":"passed","title":"should collect local settings"},{"ancestorTitles":["Export Action","Settings Collection"],"duration":2,"failureMessages":[],"fullName":"Export Action Settings Collection should merge global and local settings when includeGlobal is true","status":"passed","title":"should merge global and local settings when includeGlobal is true"},{"ancestorTitles":["Export Action","Settings Collection"],"duration":0,"failureMessages":[],"fullName":"Export Action Settings Collection should handle settings file read errors gracefully","status":"passed","title":"should handle settings file read errors gracefully"},{"ancestorTitles":["Export Action","Version Handling"],"duration":1,"failureMessages":[],"fullName":"Export Action Version Handling should use suggested version from published metadata","status":"passed","title":"should use suggested version from published metadata"},{"ancestorTitles":["Export Action","Version Handling"],"duration":0,"failureMessages":[],"fullName":"Export Action Version Handling should use valid custom version","status":"passed","title":"should use valid custom version"},{"ancestorTitles":["Export Action","Package.json Integration"],"duration":0,"failureMessages":[],"fullName":"Export Action Package.json Integration should use package.json description when available","status":"passed","title":"should use package.json description when available"},{"ancestorTitles":["Export Action","Package.json Integration"],"duration":0,"failureMessages":[],"fullName":"Export Action Package.json Integration should handle package.json parsing errors","status":"passed","title":"should handle package.json parsing errors"},{"ancestorTitles":["Export Action","Output Display"],"duration":0,"failureMessages":[],"fullName":"Export Action Output Display should display export success with component counts","status":"passed","title":"should display export success with component counts"},{"ancestorTitles":["Export Helper Functions","truncateDescription"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions truncateDescription should not truncate descriptions under 80 characters","status":"passed","title":"should not truncate descriptions under 80 characters"},{"ancestorTitles":["Export Helper Functions","truncateDescription"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions truncateDescription should truncate descriptions over 80 characters","status":"passed","title":"should truncate descriptions over 80 characters"},{"ancestorTitles":["Export Helper Functions","truncateDescription"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions truncateDescription should handle exactly 68 character descriptions","status":"passed","title":"should handle exactly 68 character descriptions"},{"ancestorTitles":["Export Helper Functions","truncateDescription"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions truncateDescription should handle empty strings","status":"passed","title":"should handle empty strings"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should extract description from valid YAML frontmatter","status":"passed","title":"should extract description from valid YAML frontmatter"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should extract and truncate long descriptions","status":"passed","title":"should extract and truncate long descriptions"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should handle quoted descriptions","status":"passed","title":"should handle quoted descriptions"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should return null for content without frontmatter","status":"passed","title":"should return null for content without frontmatter"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should return null for invalid frontmatter","status":"passed","title":"should return null for invalid frontmatter"},{"ancestorTitles":["Export Helper Functions","extractFromYamlFrontmatter"],"duration":1,"failureMessages":[],"fullName":"Export Helper Functions extractFromYamlFrontmatter should return null when no description field exists","status":"passed","title":"should return null when no description field exists"},{"ancestorTitles":["Export Helper Functions","extractFromFirstMeaningfulLine"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromFirstMeaningfulLine should extract first meaningful line","status":"passed","title":"should extract first meaningful line"},{"ancestorTitles":["Export Helper Functions","extractFromFirstMeaningfulLine"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromFirstMeaningfulLine should extract first non-heading line","status":"passed","title":"should extract first non-heading line"},{"ancestorTitles":["Export Helper Functions","extractFromFirstMeaningfulLine"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromFirstMeaningfulLine should return default message for empty content","status":"passed","title":"should return default message for empty content"},{"ancestorTitles":["Export Helper Functions","extractFromFirstMeaningfulLine"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractFromFirstMeaningfulLine should truncate long first lines","status":"passed","title":"should truncate long first lines"},{"ancestorTitles":["Export Helper Functions","extractDescriptionFromContent"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractDescriptionFromContent should prioritize YAML frontmatter over first line","status":"passed","title":"should prioritize YAML frontmatter over first line"},{"ancestorTitles":["Export Helper Functions","extractDescriptionFromContent"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions extractDescriptionFromContent should fall back to first meaningful line when no YAML","status":"passed","title":"should fall back to first meaningful line when no YAML"},{"ancestorTitles":["Export Helper Functions","resolveOutputFilename"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions resolveOutputFilename should use provided filename as-is if it has .json extension","status":"passed","title":"should use provided filename as-is if it has .json extension"},{"ancestorTitles":["Export Helper Functions","resolveOutputFilename"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions resolveOutputFilename should add .json extension if missing","status":"passed","title":"should add .json extension if missing"},{"ancestorTitles":["Export Helper Functions","resolveOutputFilename"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions resolveOutputFilename should generate default filename from directory when none provided","status":"passed","title":"should generate default filename from directory when none provided"},{"ancestorTitles":["Export Helper Functions","resolveOutputFilename"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions resolveOutputFilename should handle complex directory names","status":"passed","title":"should handle complex directory names"},{"ancestorTitles":["Export Helper Functions","scanDirectory"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions scanDirectory should return empty map for non-existent directory","status":"passed","title":"should return empty map for non-existent directory"},{"ancestorTitles":["Export Helper Functions","convertMcpConfig"],"duration":1,"failureMessages":[],"fullName":"Export Helper Functions convertMcpConfig should convert MCP server config to StackMcpServer format","status":"passed","title":"should convert MCP server config to StackMcpServer format"},{"ancestorTitles":["Export Helper Functions","convertMcpConfig"],"duration":0,"failureMessages":[],"fullName":"Export Helper Functions convertMcpConfig should use default type \"stdio\" when not specified","status":"passed","title":"should use default type \"stdio\" when not specified"}]},{"numFailingTests":0,"numPassingTests":29,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507227,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":215,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/restore.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["restoreAction","basic functionality"],"duration":3,"failureMessages":[],"fullName":"restoreAction basic functionality should restore a stack with absolute path","status":"passed","title":"should restore a stack with absolute path"},{"ancestorTitles":["restoreAction","basic functionality"],"duration":0,"failureMessages":[],"fullName":"restoreAction basic functionality should restore a stack with relative path (filename only)","status":"passed","title":"should restore a stack with relative path (filename only)"},{"ancestorTitles":["restoreAction","basic functionality"],"duration":0,"failureMessages":[],"fullName":"restoreAction basic functionality should handle overwrite mode","status":"passed","title":"should handle overwrite mode"},{"ancestorTitles":["restoreAction","basic functionality"],"duration":1,"failureMessages":[],"fullName":"restoreAction basic functionality should handle add/merge mode by default","status":"passed","title":"should handle add/merge mode by default"},{"ancestorTitles":["restoreAction","component restoration"],"duration":0,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with global commands","status":"passed","title":"should restore stack with global commands"},{"ancestorTitles":["restoreAction","component restoration"],"duration":0,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with local commands","status":"passed","title":"should restore stack with local commands"},{"ancestorTitles":["restoreAction","component restoration"],"duration":0,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with global agents","status":"passed","title":"should restore stack with global agents"},{"ancestorTitles":["restoreAction","component restoration"],"duration":1,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with local agents","status":"passed","title":"should restore stack with local agents"},{"ancestorTitles":["restoreAction","component restoration"],"duration":0,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with MCP servers","status":"passed","title":"should restore stack with MCP servers"},{"ancestorTitles":["restoreAction","component restoration"],"duration":2,"failureMessages":[],"fullName":"restoreAction component restoration should restore stack with settings","status":"passed","title":"should restore stack with settings"},{"ancestorTitles":["restoreAction","component restoration"],"duration":0,"failureMessages":[],"fullName":"restoreAction component restoration should handle stack with mixed component types","status":"passed","title":"should handle stack with mixed component types"},{"ancestorTitles":["restoreAction","options handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction options handling should handle globalOnly option","status":"passed","title":"should handle globalOnly option"},{"ancestorTitles":["restoreAction","options handling"],"duration":1,"failureMessages":[],"fullName":"restoreAction options handling should handle localOnly option","status":"passed","title":"should handle localOnly option"},{"ancestorTitles":["restoreAction","options handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction options handling should handle combined options","status":"passed","title":"should handle combined options"},{"ancestorTitles":["restoreAction","error handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction error handling should handle missing stack file","status":"passed","title":"should handle missing stack file"},{"ancestorTitles":["restoreAction","error handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction error handling should handle invalid JSON in stack file","status":"passed","title":"should handle invalid JSON in stack file"},{"ancestorTitles":["restoreAction","error handling"],"duration":1,"failureMessages":[],"fullName":"restoreAction error handling should handle file system errors during directory creation","status":"passed","title":"should handle file system errors during directory creation"},{"ancestorTitles":["restoreAction","error handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction error handling should handle dependency check failures","status":"passed","title":"should handle dependency check failures"},{"ancestorTitles":["restoreAction","error handling"],"duration":0,"failureMessages":[],"fullName":"restoreAction error handling should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions"},{"ancestorTitles":["restoreAction","path resolution"],"duration":0,"failureMessages":[],"fullName":"restoreAction path resolution should resolve absolute paths as-is","status":"passed","title":"should resolve absolute paths as-is"},{"ancestorTitles":["restoreAction","path resolution"],"duration":0,"failureMessages":[],"fullName":"restoreAction path resolution should resolve relative paths with directory","status":"passed","title":"should resolve relative paths with directory"},{"ancestorTitles":["restoreAction","path resolution"],"duration":0,"failureMessages":[],"fullName":"restoreAction path resolution should resolve filename-only paths to stacks directory","status":"passed","title":"should resolve filename-only paths to stacks directory"},{"ancestorTitles":["restoreAction","path resolution"],"duration":1,"failureMessages":[],"fullName":"restoreAction path resolution should handle path resolution errors","status":"passed","title":"should handle path resolution errors"},{"ancestorTitles":["restoreAction","stack validation"],"duration":0,"failureMessages":[],"fullName":"restoreAction stack validation should handle stack with missing optional properties","status":"passed","title":"should handle stack with missing optional properties"},{"ancestorTitles":["restoreAction","stack validation"],"duration":0,"failureMessages":[],"fullName":"restoreAction stack validation should handle stack with empty arrays","status":"passed","title":"should handle stack with empty arrays"},{"ancestorTitles":["restoreAction","stack validation"],"duration":0,"failureMessages":[],"fullName":"restoreAction stack validation should handle stack with null/undefined arrays","status":"passed","title":"should handle stack with null/undefined arrays"},{"ancestorTitles":["restoreAction","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"restoreAction integration scenarios should handle complete restoration workflow","status":"passed","title":"should handle complete restoration workflow"},{"ancestorTitles":["restoreAction","integration scenarios"],"duration":1,"failureMessages":[],"fullName":"restoreAction integration scenarios should handle restoration with permission issues","status":"passed","title":"should handle restoration with permission issues"},{"ancestorTitles":["restoreAction","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"restoreAction integration scenarios should handle MCP server restoration with claude.json read errors","status":"passed","title":"should handle MCP server restoration with claude.json read errors"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507227,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":215,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/export-errors.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Export Action Error Handling","Error Scenarios"],"duration":12,"failureMessages":[],"fullName":"Export Action Error Handling Error Scenarios should handle file system errors gracefully","status":"passed","title":"should handle file system errors gracefully"},{"ancestorTitles":["Export Action Error Handling","Error Scenarios"],"duration":0,"failureMessages":[],"fullName":"Export Action Error Handling Error Scenarios should handle writeJson errors","status":"passed","title":"should handle writeJson errors"},{"ancestorTitles":["Export Action Error Handling","Error Scenarios"],"duration":1,"failureMessages":[],"fullName":"Export Action Error Handling Error Scenarios should handle unknown error types","status":"passed","title":"should handle unknown error types"},{"ancestorTitles":["Export Action Error Handling","Error Scenarios"],"duration":0,"failureMessages":[],"fullName":"Export Action Error Handling Error Scenarios should handle validation errors","status":"passed","title":"should handle validation errors"},{"ancestorTitles":["Export Action Error Handling","Error Scenarios"],"duration":0,"failureMessages":[],"fullName":"Export Action Error Handling Error Scenarios should validate custom version format with specific message","status":"passed","title":"should validate custom version format with specific message"}]},{"numFailingTests":0,"numPassingTests":29,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507279,"loadTestEnvironmentEnd":1756185507237,"loadTestEnvironmentStart":1756185507235,"runtime":41,"setupAfterEnvEnd":1756185507269,"setupAfterEnvStart":1756185507255,"setupFilesEnd":1756185507238,"setupFilesStart":1756185507238,"slow":false,"start":1756185507238},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/constants/paths.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Path Constants","Base Path Constants"],"duration":1,"failureMessages":[],"fullName":"Path Constants Base Path Constants should define base constants with expected structure","status":"passed","title":"should define base constants with expected structure"},{"ancestorTitles":["Path Constants","Stack Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Stack Path Functions should get stack path correctly","status":"passed","title":"should get stack path correctly"},{"ancestorTitles":["Path Constants","Stack Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Stack Path Functions should get stack metadata path correctly","status":"passed","title":"should get stack metadata path correctly"},{"ancestorTitles":["Path Constants","Stack Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Stack Path Functions should get stack files path correctly","status":"passed","title":"should get stack files path correctly"},{"ancestorTitles":["Path Constants","Stack Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Stack Path Functions should handle stack names with special characters","status":"passed","title":"should handle stack names with special characters"},{"ancestorTitles":["Path Constants","Stack Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Stack Path Functions should handle empty stack name","status":"passed","title":"should handle empty stack name"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":1,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local claude directory with default project path","status":"passed","title":"should get local claude directory with default project path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local claude directory with custom project path","status":"passed","title":"should get local claude directory with custom project path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local commands directory with default path","status":"passed","title":"should get local commands directory with default path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":2,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local commands directory with custom project path","status":"passed","title":"should get local commands directory with custom project path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local agents directory with default path","status":"passed","title":"should get local agents directory with default path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local agents directory with custom project path","status":"passed","title":"should get local agents directory with custom project path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local claude md path with default path","status":"passed","title":"should get local claude md path with default path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local claude md path with custom project path","status":"passed","title":"should get local claude md path with custom project path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local settings path with default path","status":"passed","title":"should get local settings path with default path"},{"ancestorTitles":["Path Constants","Local Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Local Path Functions should get local settings path with custom project path","status":"passed","title":"should get local settings path with custom project path"},{"ancestorTitles":["Path Constants","Global Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Global Path Functions should get global claude md path correctly","status":"passed","title":"should get global claude md path correctly"},{"ancestorTitles":["Path Constants","Global Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Global Path Functions should get global commands directory correctly","status":"passed","title":"should get global commands directory correctly"},{"ancestorTitles":["Path Constants","Global Path Functions"],"duration":0,"failureMessages":[],"fullName":"Path Constants Global Path Functions should get global agents directory correctly","status":"passed","title":"should get global agents directory correctly"},{"ancestorTitles":["Path Constants","Global Path Functions"],"duration":1,"failureMessages":[],"fullName":"Path Constants Global Path Functions should get global settings path correctly","status":"passed","title":"should get global settings path correctly"},{"ancestorTitles":["Path Constants","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Path Constants Edge Cases should handle different types of stack names","status":"passed","title":"should handle different types of stack names"},{"ancestorTitles":["Path Constants","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Path Constants Edge Cases should handle relative project paths","status":"passed","title":"should handle relative project paths"},{"ancestorTitles":["Path Constants","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Path Constants Edge Cases should handle empty string project paths","status":"passed","title":"should handle empty string project paths"},{"ancestorTitles":["Path Constants","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Path Constants Edge Cases should handle nested stack paths","status":"passed","title":"should handle nested stack paths"},{"ancestorTitles":["Path Constants","Function Parameter Defaults"],"duration":0,"failureMessages":[],"fullName":"Path Constants Function Parameter Defaults should use process.cwd() when projectPath is undefined for getLocalClaudeDir","status":"passed","title":"should use process.cwd() when projectPath is undefined for getLocalClaudeDir"},{"ancestorTitles":["Path Constants","Function Parameter Defaults"],"duration":0,"failureMessages":[],"fullName":"Path Constants Function Parameter Defaults should use process.cwd() when projectPath is undefined for getLocalCommandsDir","status":"passed","title":"should use process.cwd() when projectPath is undefined for getLocalCommandsDir"},{"ancestorTitles":["Path Constants","Function Parameter Defaults"],"duration":0,"failureMessages":[],"fullName":"Path Constants Function Parameter Defaults should use process.cwd() when projectPath is undefined for getLocalAgentsDir","status":"passed","title":"should use process.cwd() when projectPath is undefined for getLocalAgentsDir"},{"ancestorTitles":["Path Constants","Function Parameter Defaults"],"duration":0,"failureMessages":[],"fullName":"Path Constants Function Parameter Defaults should use process.cwd() when projectPath is undefined for getLocalClaudeMdPath","status":"passed","title":"should use process.cwd() when projectPath is undefined for getLocalClaudeMdPath"},{"ancestorTitles":["Path Constants","Function Parameter Defaults"],"duration":0,"failureMessages":[],"fullName":"Path Constants Function Parameter Defaults should use process.cwd() when projectPath is undefined for getLocalSettingsPath","status":"passed","title":"should use process.cwd() when projectPath is undefined for getLocalSettingsPath"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507280,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":268,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/integration/controllers/StackController.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":3,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should create stack successfully","status":"passed","title":"should create stack successfully"},{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":0,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should check if stack exists","status":"passed","title":"should check if stack exists"},{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":2,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should load stack","status":"passed","title":"should load stack"},{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":0,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should handle deletion successfully","status":"passed","title":"should handle deletion successfully"},{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":1,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should handle stack creation failure","status":"passed","title":"should handle stack creation failure"},{"ancestorTitles":["StackController Integration Tests","Stack Management"],"duration":0,"failureMessages":[],"fullName":"StackController Integration Tests Stack Management should handle stack loading failure","status":"passed","title":"should handle stack loading failure"},{"ancestorTitles":["StackController Integration Tests","Stack List Operations"],"duration":0,"failureMessages":[],"fullName":"StackController Integration Tests Stack List Operations should handle list operation","status":"passed","title":"should handle list operation"},{"ancestorTitles":["StackController Integration Tests","Service Integration"],"duration":1,"failureMessages":[],"fullName":"StackController Integration Tests Service Integration should handle service errors gracefully","status":"passed","title":"should handle service errors gracefully"}]},{"numFailingTests":1,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507294,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":282,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/integration/actions/export.test.ts","failureMessage":"  ● Export Action Integration Tests › exportAction › should handle export action execution\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"process.exit called\"\n    Received message:   \"Cannot read properties of undefined (reading '/Users/dtannen/Code/claude-stacks')\"\n\n          449 |   // In test environment, throw error instead of exiting\n          450 |   if (process.env.NODE_ENV === 'test') {\n        > 451 |     throw new Error(error instanceof Error ? error.message : String(error));\n              |           ^\n          452 |   }\n          453 |   \n          454 |   process.exit(1);\n\n      at handleExportError (src/actions/export.ts:451:11)\n      at handleExportError (src/actions/export.ts:411:5)\n      at Object.<anonymous> (tests/integration/actions/export.test.ts:101:7)\n      at Object.toThrow (node_modules/expect/build/index.js:2155:20)\n      at Object.<anonymous> (tests/integration/actions/export.test.ts:104:19)\n","testResults":[{"ancestorTitles":["Export Action Integration Tests","exportAction"],"duration":12,"failureMessages":["Error: expect(received).rejects.toThrow(expected)\n\nExpected substring: \"process.exit called\"\nReceived message:   \"Cannot read properties of undefined (reading '/Users/dtannen/Code/claude-stacks')\"\n\n      449 |   // In test environment, throw error instead of exiting\n      450 |   if (process.env.NODE_ENV === 'test') {\n    > 451 |     throw new Error(error instanceof Error ? error.message : String(error));\n          |           ^\n      452 |   }\n      453 |   \n      454 |   process.exit(1);\n\n      at handleExportError (src/actions/export.ts:451:11)\n      at handleExportError (src/actions/export.ts:411:5)\n      at Object.<anonymous> (tests/integration/actions/export.test.ts:101:7)\n    at Object.toThrow (/Users/dtannen/Code/claude-stacks/node_modules/expect/build/index.js:2155:20)\n    at Object.<anonymous> (/Users/dtannen/Code/claude-stacks/tests/integration/actions/export.test.ts:104:19)\n    at Promise.finally.completed (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/Users/dtannen/Code/claude-stacks/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/dtannen/Code/claude-stacks/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/dtannen/Code/claude-stacks/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/dtannen/Code/claude-stacks/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"Export Action Integration Tests exportAction should handle export action execution","status":"failed","title":"should handle export action execution"},{"ancestorTitles":["Export Action Integration Tests","exportAction"],"duration":1,"failureMessages":[],"fullName":"Export Action Integration Tests exportAction should import and call exportAction without syntax errors","status":"passed","title":"should import and call exportAction without syntax errors"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507310,"loadTestEnvironmentEnd":1756185507235,"loadTestEnvironmentStart":1756185507232,"runtime":75,"setupAfterEnvEnd":1756185507269,"setupAfterEnvStart":1756185507256,"setupFilesEnd":1756185507235,"setupFilesStart":1756185507235,"slow":false,"start":1756185507235},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/browse.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["browseAction","main menu functionality"],"duration":1,"failureMessages":[],"fullName":"browseAction main menu functionality should display main browse menu and quit when q is pressed","status":"passed","title":"should display main browse menu and quit when q is pressed"},{"ancestorTitles":["browseAction","main menu functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction main menu functionality should handle empty input as quit","status":"passed","title":"should handle empty input as quit"},{"ancestorTitles":["browseAction","main menu functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction main menu functionality should handle invalid menu option and retry","status":"passed","title":"should handle invalid menu option and retry"},{"ancestorTitles":["browseAction","all stacks functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction all stacks functionality should fetch and display all stacks when a is pressed","status":"passed","title":"should fetch and display all stacks when a is pressed"},{"ancestorTitles":["browseAction","all stacks functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction all stacks functionality should show local dev API URL when in local development mode","status":"passed","title":"should show local dev API URL when in local development mode"},{"ancestorTitles":["browseAction","all stacks functionality"],"duration":1,"failureMessages":[],"fullName":"browseAction all stacks functionality should handle empty stacks response","status":"passed","title":"should handle empty stacks response"},{"ancestorTitles":["browseAction","all stacks functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction all stacks functionality should handle API fetch error","status":"passed","title":"should handle API fetch error"},{"ancestorTitles":["browseAction","all stacks functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction all stacks functionality should handle API response error","status":"passed","title":"should handle API response error"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":11,"failureMessages":[],"fullName":"browseAction stack selection and actions should display stack details when valid number is selected","status":"passed","title":"should display stack details when valid number is selected"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":0,"failureMessages":[],"fullName":"browseAction stack selection and actions should handle invalid stack selection","status":"passed","title":"should handle invalid stack selection"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":1,"failureMessages":[],"fullName":"browseAction stack selection and actions should install stack when i is pressed","status":"passed","title":"should install stack when i is pressed"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":0,"failureMessages":[],"fullName":"browseAction stack selection and actions should handle install action error","status":"passed","title":"should handle install action error"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":1,"failureMessages":[],"fullName":"browseAction stack selection and actions should open browser when v is pressed","status":"passed","title":"should open browser when v is pressed"},{"ancestorTitles":["browseAction","stack selection and actions"],"duration":0,"failureMessages":[],"fullName":"browseAction stack selection and actions should handle browser open error","status":"passed","title":"should handle browser open error"},{"ancestorTitles":["browseAction","my stacks functionality"],"duration":0,"failureMessages":[],"fullName":"browseAction my stacks functionality should fetch and display user stacks when m is pressed","status":"passed","title":"should fetch and display user stacks when m is pressed"},{"ancestorTitles":["browseAction","my stacks functionality"],"duration":1,"failureMessages":[],"fullName":"browseAction my stacks functionality should handle my stacks API error","status":"passed","title":"should handle my stacks API error"},{"ancestorTitles":["browseAction","search functionality"],"duration":2,"failureMessages":[],"fullName":"browseAction search functionality should perform search when s is pressed","status":"passed","title":"should perform search when s is pressed"},{"ancestorTitles":["browseAction","search functionality"],"duration":2,"failureMessages":[],"fullName":"browseAction search functionality should handle search API error","status":"passed","title":"should handle search API error"},{"ancestorTitles":["browseAction","search functionality"],"duration":3,"failureMessages":[],"fullName":"browseAction search functionality should handle empty search term","status":"passed","title":"should handle empty search term"},{"ancestorTitles":["browseAction","my stacks management actions"],"duration":1,"failureMessages":[],"fullName":"browseAction my stacks management actions should show ownership actions for my stacks","status":"passed","title":"should show ownership actions for my stacks"},{"ancestorTitles":["browseAction","my stacks management actions"],"duration":3,"failureMessages":[],"fullName":"browseAction my stacks management actions should handle rename action","status":"passed","title":"should handle rename action"},{"ancestorTitles":["browseAction","my stacks management actions"],"duration":0,"failureMessages":[],"fullName":"browseAction my stacks management actions should handle visibility toggle to public","status":"passed","title":"should handle visibility toggle to public"},{"ancestorTitles":["browseAction","my stacks management actions"],"duration":1,"failureMessages":[],"fullName":"browseAction my stacks management actions should handle delete action with confirmation","status":"passed","title":"should handle delete action with confirmation"},{"ancestorTitles":["browseAction","my stacks management actions"],"duration":0,"failureMessages":[],"fullName":"browseAction my stacks management actions should cancel delete when n is pressed","status":"passed","title":"should cancel delete when n is pressed"},{"ancestorTitles":["browseAction","error handling"],"duration":0,"failureMessages":[],"fullName":"browseAction error handling should handle browse action failure and exit","status":"passed","title":"should handle browse action failure and exit"},{"ancestorTitles":["browseAction","error handling"],"duration":1,"failureMessages":[],"fullName":"browseAction error handling should handle unexpected API response format","status":"passed","title":"should handle unexpected API response format"},{"ancestorTitles":["browseAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"browseAction edge cases should handle stack without org field","status":"passed","title":"should handle stack without org field"},{"ancestorTitles":["browseAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"browseAction edge cases should handle missing component counts","status":"passed","title":"should handle missing component counts"}]},{"numFailingTests":0,"numPassingTests":50,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507321,"loadTestEnvironmentEnd":1756185507237,"loadTestEnvironmentStart":1756185507234,"runtime":84,"setupAfterEnvEnd":1756185507269,"setupAfterEnvStart":1756185507257,"setupFilesEnd":1756185507237,"setupFilesStart":1756185507237,"slow":false,"start":1756185507237},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/ui/display.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["display module","showStackInfo","current directory display"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo current directory display should display current directory information when showCurrent is true","status":"passed","title":"should display current directory information when showCurrent is true"},{"ancestorTitles":["display module","showStackInfo","current directory display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo current directory display should use colors.meta for path display","status":"passed","title":"should use colors.meta for path display"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should load stack from file when provided","status":"passed","title":"should load stack from file when provided"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should resolve stack file path from current directory when not provided","status":"passed","title":"should resolve stack file path from current directory when not provided"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should handle relative paths without slashes","status":"passed","title":"should handle relative paths without slashes"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should resolve absolute paths for complex filenames","status":"passed","title":"should resolve absolute paths for complex filenames"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":12,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should throw error when stack file does not exist","status":"passed","title":"should throw error when stack file does not exist"},{"ancestorTitles":["display module","showStackInfo","stack file loading"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo stack file loading should handle JSON reading errors","status":"passed","title":"should handle JSON reading errors"},{"ancestorTitles":["display module","showStackInfo","stack header display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo stack header display should display basic stack information","status":"passed","title":"should display basic stack information"},{"ancestorTitles":["display module","showStackInfo","stack header display"],"duration":11,"failureMessages":[],"fullName":"display module showStackInfo stack header display should display metadata when available","status":"passed","title":"should display metadata when available"},{"ancestorTitles":["display module","showStackInfo","stack header display"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo stack header display should use colors for different elements","status":"passed","title":"should use colors for different elements"},{"ancestorTitles":["display module","showStackInfo","stack header display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo stack header display should handle missing optional fields gracefully","status":"passed","title":"should handle missing optional fields gracefully"},{"ancestorTitles":["display module","showStackInfo","component categorization and display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo component categorization and display should categorize and display global components","status":"passed","title":"should categorize and display global components"},{"ancestorTitles":["display module","showStackInfo","component categorization and display"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo component categorization and display should categorize and display local components","status":"passed","title":"should categorize and display local components"},{"ancestorTitles":["display module","showStackInfo","component categorization and display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo component categorization and display should handle mixed global and local components","status":"passed","title":"should handle mixed global and local components"},{"ancestorTitles":["display module","showStackInfo","component categorization and display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo component categorization and display should handle components without descriptions","status":"passed","title":"should handle components without descriptions"},{"ancestorTitles":["display module","showStackInfo","component categorization and display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo component categorization and display should skip empty component sections","status":"passed","title":"should skip empty component sections"},{"ancestorTitles":["display module","showStackInfo","description truncation"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo description truncation should truncate long descriptions to 80 characters","status":"passed","title":"should truncate long descriptions to 80 characters"},{"ancestorTitles":["display module","showStackInfo","description truncation"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo description truncation should not truncate descriptions under 80 characters","status":"passed","title":"should not truncate descriptions under 80 characters"},{"ancestorTitles":["display module","showStackInfo","description truncation"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo description truncation should handle exactly 80 character descriptions","status":"passed","title":"should handle exactly 80 character descriptions"},{"ancestorTitles":["display module","showStackInfo","MCP servers display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo MCP servers display should display MCP servers with basic info","status":"passed","title":"should display MCP servers with basic info"},{"ancestorTitles":["display module","showStackInfo","MCP servers display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo MCP servers display should display MCP servers with URLs","status":"passed","title":"should display MCP servers with URLs"},{"ancestorTitles":["display module","showStackInfo","MCP servers display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo MCP servers display should display MCP servers without type or command/url","status":"passed","title":"should display MCP servers without type or command/url"},{"ancestorTitles":["display module","showStackInfo","MCP servers display"],"duration":2,"failureMessages":[],"fullName":"display module showStackInfo MCP servers display should handle multiple MCP servers","status":"passed","title":"should handle multiple MCP servers"},{"ancestorTitles":["display module","showStackInfo","MCP servers display"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo MCP servers display should skip MCP section when no servers","status":"passed","title":"should skip MCP section when no servers"},{"ancestorTitles":["display module","showStackInfo","CLAUDE.md display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo CLAUDE.md display should display global CLAUDE.md","status":"passed","title":"should display global CLAUDE.md"},{"ancestorTitles":["display module","showStackInfo","CLAUDE.md display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo CLAUDE.md display should display local CLAUDE.md","status":"passed","title":"should display local CLAUDE.md"},{"ancestorTitles":["display module","showStackInfo","CLAUDE.md display"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo CLAUDE.md display should display both global and local CLAUDE.md","status":"passed","title":"should display both global and local CLAUDE.md"},{"ancestorTitles":["display module","showStackInfo","settings display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display should display settings when available","status":"passed","title":"should display settings when available"},{"ancestorTitles":["display module","showStackInfo","settings display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display should skip settings when empty or undefined","status":"passed","title":"should skip settings when empty or undefined"},{"ancestorTitles":["display module","showStackInfo","settings display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display should skip specific settings like $schema and feedbackSurveyState","status":"passed","title":"should skip specific settings like $schema and feedbackSurveyState"},{"ancestorTitles":["display module","showStackInfo","settings display"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display should handle object settings with JSON formatting","status":"passed","title":"should handle object settings with JSON formatting"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle permissions settings","status":"passed","title":"should handle permissions settings"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle statusLine settings","status":"passed","title":"should handle statusLine settings"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle statusLine settings without command","status":"passed","title":"should handle statusLine settings without command"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle statusLine settings with unknown type","status":"passed","title":"should handle statusLine settings with unknown type"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle hooks settings","status":"passed","title":"should handle hooks settings"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle null hooks settings","status":"passed","title":"should handle null hooks settings"},{"ancestorTitles":["display module","showStackInfo","settings display","special settings handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo settings display special settings handling should handle non-object hooks settings","status":"passed","title":"should handle non-object hooks settings"},{"ancestorTitles":["display module","showStackInfo","text formatting and utilities"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo text formatting and utilities should handle special characters in descriptions","status":"passed","title":"should handle special characters in descriptions"},{"ancestorTitles":["display module","showStackInfo","text formatting and utilities"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo text formatting and utilities should handle empty string descriptions","status":"passed","title":"should handle empty string descriptions"},{"ancestorTitles":["display module","showStackInfo","text formatting and utilities"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo text formatting and utilities should handle unicode and emoji in descriptions","status":"passed","title":"should handle unicode and emoji in descriptions"},{"ancestorTitles":["display module","showStackInfo","text formatting and utilities"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo text formatting and utilities should handle newlines in descriptions","status":"passed","title":"should handle newlines in descriptions"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle null/undefined components gracefully","status":"passed","title":"should handle null/undefined components gracefully"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle empty arrays for components","status":"passed","title":"should handle empty arrays for components"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle malformed settings gracefully","status":"passed","title":"should handle malformed settings gracefully"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle components with missing filePath","status":"passed","title":"should handle components with missing filePath"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":0,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle large number of components efficiently","status":"passed","title":"should handle large number of components efficiently"},{"ancestorTitles":["display module","showStackInfo","edge cases and error handling"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo edge cases and error handling should handle deeply nested settings objects","status":"passed","title":"should handle deeply nested settings objects"},{"ancestorTitles":["display module","showStackInfo","comprehensive integration"],"duration":1,"failureMessages":[],"fullName":"display module showStackInfo comprehensive integration should handle a complete stack with all features","status":"passed","title":"should handle a complete stack with all features"}]},{"numFailingTests":0,"numPassingTests":41,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507328,"loadTestEnvironmentEnd":1756185507288,"loadTestEnvironmentStart":1756185507286,"runtime":40,"setupAfterEnvEnd":1756185507308,"setupAfterEnvStart":1756185507303,"setupFilesEnd":1756185507288,"setupFilesStart":1756185507288,"slow":false,"start":1756185507288},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/ui/menus.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should display local stack details correctly","status":"passed","title":"should display local stack details correctly"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should display component counts correctly","status":"passed","title":"should display component counts correctly"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should display metadata correctly","status":"passed","title":"should display metadata correctly"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should handle stack with no version","status":"passed","title":"should handle stack with no version"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should handle stack with empty components","status":"passed","title":"should handle stack with empty components"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions should display action prompt correctly","status":"passed","title":"should display action prompt correctly"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle restore action","status":"passed","title":"should handle restore action"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle restore action failure","status":"passed","title":"should handle restore action failure"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle overwrite action with confirmation","status":"passed","title":"should handle overwrite action with confirmation"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle overwrite action cancellation","status":"passed","title":"should handle overwrite action cancellation"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle publish action with public visibility","status":"passed","title":"should handle publish action with public visibility"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle publish action with private visibility","status":"passed","title":"should handle publish action with private visibility"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle publish action failure","status":"passed","title":"should handle publish action failure"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle show details action","status":"passed","title":"should handle show details action"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle delete action with confirmation","status":"passed","title":"should handle delete action with confirmation"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle delete action cancellation","status":"passed","title":"should handle delete action cancellation"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle delete action failure","status":"passed","title":"should handle delete action failure"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle back action","status":"passed","title":"should handle back action"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle empty input as back action","status":"passed","title":"should handle empty input as back action"},{"ancestorTitles":["ui/menus","showLocalStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showLocalStackDetailsAndActions action handling should handle invalid action","status":"passed","title":"should handle invalid action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display remote stack details correctly","status":"passed","title":"should display remote stack details correctly"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display remote stack with unknown author","status":"passed","title":"should display remote stack with unknown author"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":1,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display component counts correctly","status":"passed","title":"should display component counts correctly"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display stats correctly","status":"passed","title":"should display stats correctly"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should handle missing stats gracefully","status":"passed","title":"should handle missing stats gracefully"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":1,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display action prompt without delete for non-authenticated users","status":"passed","title":"should display action prompt without delete for non-authenticated users"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions should display action prompt with delete for authenticated users","status":"passed","title":"should display action prompt with delete for authenticated users"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle install action","status":"passed","title":"should handle install action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle install action failure","status":"passed","title":"should handle install action failure"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle view action","status":"passed","title":"should handle view action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle view action failure","status":"passed","title":"should handle view action failure"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle delete action with confirmation when authenticated","status":"passed","title":"should handle delete action with confirmation when authenticated"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle delete action cancellation when authenticated","status":"passed","title":"should handle delete action cancellation when authenticated"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle delete action failure when authenticated","status":"passed","title":"should handle delete action failure when authenticated"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should ignore delete action when not authenticated","status":"passed","title":"should ignore delete action when not authenticated"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle back action","status":"passed","title":"should handle back action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle empty input as back action","status":"passed","title":"should handle empty input as back action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","action handling"],"duration":1,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions action handling should handle invalid action","status":"passed","title":"should handle invalid action"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","edge cases"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions edge cases should handle stack with no version","status":"passed","title":"should handle stack with no version"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","edge cases"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions edge cases should handle component counts with undefined values","status":"passed","title":"should handle component counts with undefined values"},{"ancestorTitles":["ui/menus","showStackDetailsAndActions","edge cases"],"duration":0,"failureMessages":[],"fullName":"ui/menus showStackDetailsAndActions edge cases should handle case-insensitive input","status":"passed","title":"should handle case-insensitive input"}]},{"numFailingTests":0,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507345,"loadTestEnvironmentEnd":1756185507303,"loadTestEnvironmentStart":1756185507301,"runtime":42,"setupAfterEnvEnd":1756185507333,"setupAfterEnvStart":1756185507322,"setupFilesEnd":1756185507303,"setupFilesStart":1756185507303,"slow":false,"start":1756185507303},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/list.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["list.ts","listLocalStacks"],"duration":1,"failureMessages":[],"fullName":"list.ts listLocalStacks should return empty array when stacks directory does not exist","status":"passed","title":"should return empty array when stacks directory does not exist"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":0,"failureMessages":[],"fullName":"list.ts listLocalStacks should return empty array when no stack files found","status":"passed","title":"should return empty array when no stack files found"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":0,"failureMessages":[],"fullName":"list.ts listLocalStacks should read and parse valid stack files correctly","status":"passed","title":"should read and parse valid stack files correctly"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":1,"failureMessages":[],"fullName":"list.ts listLocalStacks should handle invalid JSON files gracefully by skipping them","status":"passed","title":"should handle invalid JSON files gracefully by skipping them"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":0,"failureMessages":[],"fullName":"list.ts listLocalStacks should sort stacks by creation date with newest first","status":"passed","title":"should sort stacks by creation date with newest first"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":0,"failureMessages":[],"fullName":"list.ts listLocalStacks should handle stacks with missing metadata gracefully","status":"passed","title":"should handle stacks with missing metadata gracefully"},{"ancestorTitles":["list.ts","listLocalStacks"],"duration":0,"failureMessages":[],"fullName":"list.ts listLocalStacks should add filePath property to each stack","status":"passed","title":"should add filePath property to each stack"},{"ancestorTitles":["list.ts","listAction"],"duration":1,"failureMessages":[],"fullName":"list.ts listAction should handle empty stack list case","status":"passed","title":"should handle empty stack list case"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle empty stacks directory","status":"passed","title":"should handle empty stacks directory"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle file system errors and exit with process.exit(1)","status":"passed","title":"should handle file system errors and exit with process.exit(1)"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle Error objects in catch block","status":"passed","title":"should handle Error objects in catch block"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle non-Error exceptions properly","status":"passed","title":"should handle non-Error exceptions properly"},{"ancestorTitles":["list.ts","listAction"],"duration":1,"failureMessages":[],"fullName":"list.ts listAction should display stack list with proper formatting","status":"passed","title":"should display stack list with proper formatting"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle valid stack selection and show details","status":"passed","title":"should handle valid stack selection and show details"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle invalid stack selection gracefully","status":"passed","title":"should handle invalid stack selection gracefully"},{"ancestorTitles":["list.ts","listAction"],"duration":0,"failureMessages":[],"fullName":"list.ts listAction should handle non-numeric input gracefully","status":"passed","title":"should handle non-numeric input gracefully"},{"ancestorTitles":["list.ts","Integration scenarios"],"duration":1,"failureMessages":[],"fullName":"list.ts Integration scenarios should handle directory with mixed file types","status":"passed","title":"should handle directory with mixed file types"},{"ancestorTitles":["list.ts","Integration scenarios"],"duration":0,"failureMessages":[],"fullName":"list.ts Integration scenarios should handle stacks with complex component structure","status":"passed","title":"should handle stacks with complex component structure"}]},{"numFailingTests":0,"numPassingTests":38,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507344,"loadTestEnvironmentEnd":1756185507282,"loadTestEnvironmentStart":1756185507280,"runtime":62,"setupAfterEnvEnd":1756185507296,"setupAfterEnvStart":1756185507291,"setupFilesEnd":1756185507282,"setupFilesStart":1756185507282,"slow":false,"start":1756185507282},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/auth.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Auth Utility Functions","findAvailablePort"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions findAvailablePort should find and return an available port","status":"passed","title":"should find and return an available port"},{"ancestorTitles":["Auth Utility Functions","findAvailablePort"],"duration":8,"failureMessages":[],"fullName":"Auth Utility Functions findAvailablePort should reject when no port is available","status":"passed","title":"should reject when no port is available"},{"ancestorTitles":["Auth Utility Functions","findAvailablePort"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions findAvailablePort should reject when address is not an object","status":"passed","title":"should reject when address is not an object"},{"ancestorTitles":["Auth Utility Functions","findAvailablePort"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions findAvailablePort should reject when server throws an error","status":"passed","title":"should reject when server throws an error"},{"ancestorTitles":["Auth Utility Functions","generatePKCE"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions generatePKCE should generate valid PKCE challenge and verifier","status":"passed","title":"should generate valid PKCE challenge and verifier"},{"ancestorTitles":["Auth Utility Functions","generatePKCE"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions generatePKCE should generate different values on subsequent calls","status":"passed","title":"should generate different values on subsequent calls"},{"ancestorTitles":["Auth Utility Functions","generatePKCE"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions generatePKCE should handle crypto errors gracefully","status":"passed","title":"should handle crypto errors gracefully"},{"ancestorTitles":["Auth Utility Functions","getStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions getStoredToken should return null when token file does not exist","status":"passed","title":"should return null when token file does not exist"},{"ancestorTitles":["Auth Utility Functions","getStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions getStoredToken should return token when file exists and contains valid data","status":"passed","title":"should return token when file exists and contains valid data"},{"ancestorTitles":["Auth Utility Functions","getStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions getStoredToken should return null when file exists but contains invalid JSON","status":"passed","title":"should return null when file exists but contains invalid JSON"},{"ancestorTitles":["Auth Utility Functions","getStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions getStoredToken should return null when readJson throws any error","status":"passed","title":"should return null when readJson throws any error"},{"ancestorTitles":["Auth Utility Functions","getStoredToken"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions getStoredToken should handle pathExists error gracefully","status":"passed","title":"should handle pathExists error gracefully"},{"ancestorTitles":["Auth Utility Functions","storeToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions storeToken should store token successfully","status":"passed","title":"should store token successfully"},{"ancestorTitles":["Auth Utility Functions","storeToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions storeToken should handle writeJson errors","status":"passed","title":"should handle writeJson errors"},{"ancestorTitles":["Auth Utility Functions","storeToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions storeToken should accept token without optional fields","status":"passed","title":"should accept token without optional fields"},{"ancestorTitles":["Auth Utility Functions","clearStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions clearStoredToken should remove token file when it exists","status":"passed","title":"should remove token file when it exists"},{"ancestorTitles":["Auth Utility Functions","clearStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions clearStoredToken should not attempt removal when file does not exist","status":"passed","title":"should not attempt removal when file does not exist"},{"ancestorTitles":["Auth Utility Functions","clearStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions clearStoredToken should handle pathExists errors","status":"passed","title":"should handle pathExists errors"},{"ancestorTitles":["Auth Utility Functions","clearStoredToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions clearStoredToken should handle remove errors","status":"passed","title":"should handle remove errors"},{"ancestorTitles":["Auth Utility Functions","refreshToken"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions refreshToken should successfully refresh token","status":"passed","title":"should successfully refresh token"},{"ancestorTitles":["Auth Utility Functions","refreshToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions refreshToken should handle HTTP errors during refresh","status":"passed","title":"should handle HTTP errors during refresh"},{"ancestorTitles":["Auth Utility Functions","refreshToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions refreshToken should handle network errors during refresh","status":"passed","title":"should handle network errors during refresh"},{"ancestorTitles":["Auth Utility Functions","refreshToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions refreshToken should handle JSON parsing errors","status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["Auth Utility Functions","refreshToken"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions refreshToken should handle empty refresh token","status":"passed","title":"should handle empty refresh token"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should return existing valid token without authentication","status":"passed","title":"should return existing valid token without authentication"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should refresh expired token successfully","status":"passed","title":"should refresh expired token successfully"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":2,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle no stored token and start new auth flow","status":"passed","title":"should handle no stored token and start new auth flow"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":2,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle OAuth callback with error parameter","status":"passed","title":"should handle OAuth callback with error parameter"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle OAuth callback with invalid state","status":"passed","title":"should handle OAuth callback with invalid state"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":2,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle OAuth callback with no authorization code","status":"passed","title":"should handle OAuth callback with no authorization code"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":2,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle token exchange failure","status":"passed","title":"should handle token exchange failure"},{"ancestorTitles":["Auth Utility Functions","authenticate (Integration)"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions authenticate (Integration) should handle browser open failure gracefully","status":"passed","title":"should handle browser open failure gracefully"},{"ancestorTitles":["Auth Utility Functions","Edge Cases and Error Handling"],"duration":11,"failureMessages":[],"fullName":"Auth Utility Functions Edge Cases and Error Handling should handle concurrent token storage operations","status":"passed","title":"should handle concurrent token storage operations"},{"ancestorTitles":["Auth Utility Functions","Edge Cases and Error Handling"],"duration":1,"failureMessages":[],"fullName":"Auth Utility Functions Edge Cases and Error Handling should handle concurrent token retrieval operations","status":"passed","title":"should handle concurrent token retrieval operations"},{"ancestorTitles":["Auth Utility Functions","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions Edge Cases and Error Handling should handle malformed token data gracefully","status":"passed","title":"should handle malformed token data gracefully"},{"ancestorTitles":["Auth Utility Functions","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions Edge Cases and Error Handling should handle extremely large port numbers","status":"passed","title":"should handle extremely large port numbers"},{"ancestorTitles":["Auth Utility Functions","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions Edge Cases and Error Handling should handle token without expiry time","status":"passed","title":"should handle token without expiry time"},{"ancestorTitles":["Auth Utility Functions","Memory and Resource Management"],"duration":0,"failureMessages":[],"fullName":"Auth Utility Functions Memory and Resource Management should clean up server resources properly on successful port finding","status":"passed","title":"should clean up server resources properly on successful port finding"}]},{"numFailingTests":0,"numPassingTests":23,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507349,"loadTestEnvironmentEnd":1756185507315,"loadTestEnvironmentStart":1756185507314,"runtime":34,"setupAfterEnvEnd":1756185507331,"setupAfterEnvStart":1756185507324,"setupFilesEnd":1756185507315,"setupFilesStart":1756185507315,"slow":false,"start":1756185507315},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/version.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Version Utility Functions","parseVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions parseVersion should parse valid semantic versions","status":"passed","title":"should parse valid semantic versions"},{"ancestorTitles":["Version Utility Functions","parseVersion"],"duration":8,"failureMessages":[],"fullName":"Version Utility Functions parseVersion should throw error for invalid versions","status":"passed","title":"should throw error for invalid versions"},{"ancestorTitles":["Version Utility Functions","parseVersion"],"duration":1,"failureMessages":[],"fullName":"Version Utility Functions parseVersion should handle edge cases","status":"passed","title":"should handle edge cases"},{"ancestorTitles":["Version Utility Functions","formatVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions formatVersion should format version objects to strings","status":"passed","title":"should format version objects to strings"},{"ancestorTitles":["Version Utility Functions","compareVersions"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions compareVersions should compare versions correctly","status":"passed","title":"should compare versions correctly"},{"ancestorTitles":["Version Utility Functions","compareVersions"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions compareVersions should handle complex version comparisons","status":"passed","title":"should handle complex version comparisons"},{"ancestorTitles":["Version Utility Functions","isValidVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions isValidVersion should validate semantic versions","status":"passed","title":"should validate semantic versions"},{"ancestorTitles":["Version Utility Functions","isValidVersion"],"duration":1,"failureMessages":[],"fullName":"Version Utility Functions isValidVersion should reject invalid versions","status":"passed","title":"should reject invalid versions"},{"ancestorTitles":["Version Utility Functions","bumpVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions bumpVersion should bump patch version","status":"passed","title":"should bump patch version"},{"ancestorTitles":["Version Utility Functions","bumpVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions bumpVersion should bump minor version","status":"passed","title":"should bump minor version"},{"ancestorTitles":["Version Utility Functions","bumpVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions bumpVersion should bump major version","status":"passed","title":"should bump major version"},{"ancestorTitles":["Version Utility Functions","bumpVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions bumpVersion should throw error for invalid version or bump type","status":"passed","title":"should throw error for invalid version or bump type"},{"ancestorTitles":["Version Utility Functions","getDefaultVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions getDefaultVersion should return default version","status":"passed","title":"should return default version"},{"ancestorTitles":["Version Utility Functions","suggestVersionBump"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions suggestVersionBump should suggest major bump for breaking changes","status":"passed","title":"should suggest major bump for breaking changes"},{"ancestorTitles":["Version Utility Functions","suggestVersionBump"],"duration":1,"failureMessages":[],"fullName":"Version Utility Functions suggestVersionBump should suggest minor bump for new features","status":"passed","title":"should suggest minor bump for new features"},{"ancestorTitles":["Version Utility Functions","suggestVersionBump"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions suggestVersionBump should suggest patch bump for small changes","status":"passed","title":"should suggest patch bump for small changes"},{"ancestorTitles":["Version Utility Functions","suggestVersionBump"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions suggestVersionBump should handle identical configurations","status":"passed","title":"should handle identical configurations"},{"ancestorTitles":["Version Utility Functions","generateSuggestedVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions generateSuggestedVersion should generate suggested version based on changes","status":"passed","title":"should generate suggested version based on changes"},{"ancestorTitles":["Version Utility Functions","generateSuggestedVersion"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions generateSuggestedVersion should handle invalid current version","status":"passed","title":"should handle invalid current version"},{"ancestorTitles":["Version Utility Functions","Performance Tests"],"duration":1,"failureMessages":[],"fullName":"Version Utility Functions Performance Tests should handle version parsing efficiently","status":"passed","title":"should handle version parsing efficiently"},{"ancestorTitles":["Version Utility Functions","Performance Tests"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions Performance Tests should handle version comparison efficiently","status":"passed","title":"should handle version comparison efficiently"},{"ancestorTitles":["Version Utility Functions","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions Edge Cases should handle version comparison with different number lengths","status":"passed","title":"should handle version comparison with different number lengths"},{"ancestorTitles":["Version Utility Functions","Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Version Utility Functions Edge Cases should handle zero versions","status":"passed","title":"should handle zero versions"}]},{"numFailingTests":0,"numPassingTests":26,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507376,"loadTestEnvironmentEnd":1756185507348,"loadTestEnvironmentStart":1756185507347,"runtime":28,"setupAfterEnvEnd":1756185507363,"setupAfterEnvStart":1756185507358,"setupFilesEnd":1756185507348,"setupFilesStart":1756185507348,"slow":false,"start":1756185507348},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/metadata.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["metadata utils","getMetadataPath"],"duration":0,"failureMessages":[],"fullName":"metadata utils getMetadataPath should return correct metadata path","status":"passed","title":"should return correct metadata path"},{"ancestorTitles":["metadata utils","loadMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils loadMetadata should load existing metadata file","status":"passed","title":"should load existing metadata file"},{"ancestorTitles":["metadata utils","loadMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils loadMetadata should return default metadata when file does not exist","status":"passed","title":"should return default metadata when file does not exist"},{"ancestorTitles":["metadata utils","loadMetadata"],"duration":1,"failureMessages":[],"fullName":"metadata utils loadMetadata should return default metadata when file is corrupted","status":"passed","title":"should return default metadata when file is corrupted"},{"ancestorTitles":["metadata utils","loadMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils loadMetadata should handle pathExists errors gracefully","status":"passed","title":"should handle pathExists errors gracefully"},{"ancestorTitles":["metadata utils","saveMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils saveMetadata should save metadata to file","status":"passed","title":"should save metadata to file"},{"ancestorTitles":["metadata utils","saveMetadata"],"duration":4,"failureMessages":[],"fullName":"metadata utils saveMetadata should handle directory creation errors","status":"passed","title":"should handle directory creation errors"},{"ancestorTitles":["metadata utils","saveMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils saveMetadata should handle write errors","status":"passed","title":"should handle write errors"},{"ancestorTitles":["metadata utils","getPublishedStackMetadata"],"duration":1,"failureMessages":[],"fullName":"metadata utils getPublishedStackMetadata should return metadata for existing stack","status":"passed","title":"should return metadata for existing stack"},{"ancestorTitles":["metadata utils","getPublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils getPublishedStackMetadata should return null for non-existent stack","status":"passed","title":"should return null for non-existent stack"},{"ancestorTitles":["metadata utils","getPublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils getPublishedStackMetadata should return null when metadata file is corrupted","status":"passed","title":"should return null when metadata file is corrupted"},{"ancestorTitles":["metadata utils","savePublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils savePublishedStackMetadata should save new stack metadata","status":"passed","title":"should save new stack metadata"},{"ancestorTitles":["metadata utils","savePublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils savePublishedStackMetadata should update existing stack metadata","status":"passed","title":"should update existing stack metadata"},{"ancestorTitles":["metadata utils","savePublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils savePublishedStackMetadata should handle save errors","status":"passed","title":"should handle save errors"},{"ancestorTitles":["metadata utils","removePublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils removePublishedStackMetadata should remove existing stack metadata","status":"passed","title":"should remove existing stack metadata"},{"ancestorTitles":["metadata utils","removePublishedStackMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils removePublishedStackMetadata should handle removal of non-existent stack gracefully","status":"passed","title":"should handle removal of non-existent stack gracefully"},{"ancestorTitles":["metadata utils","getAllPublishedStacks"],"duration":1,"failureMessages":[],"fullName":"metadata utils getAllPublishedStacks should return all published stacks","status":"passed","title":"should return all published stacks"},{"ancestorTitles":["metadata utils","getAllPublishedStacks"],"duration":0,"failureMessages":[],"fullName":"metadata utils getAllPublishedStacks should return empty object when no stacks are published","status":"passed","title":"should return empty object when no stacks are published"},{"ancestorTitles":["metadata utils","getAllPublishedStacks"],"duration":0,"failureMessages":[],"fullName":"metadata utils getAllPublishedStacks should return empty object when metadata is corrupted","status":"passed","title":"should return empty object when metadata is corrupted"},{"ancestorTitles":["metadata utils","findStackByStackId"],"duration":0,"failureMessages":[],"fullName":"metadata utils findStackByStackId should find stack by exact ID match","status":"passed","title":"should find stack by exact ID match"},{"ancestorTitles":["metadata utils","findStackByStackId"],"duration":0,"failureMessages":[],"fullName":"metadata utils findStackByStackId should return null for non-existent stack ID","status":"passed","title":"should return null for non-existent stack ID"},{"ancestorTitles":["metadata utils","cleanupMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils cleanupMetadata should remove metadata for stacks with non-existent local paths","status":"passed","title":"should remove metadata for stacks with non-existent local paths"},{"ancestorTitles":["metadata utils","cleanupMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils cleanupMetadata should handle metadata file not existing","status":"passed","title":"should handle metadata file not existing"},{"ancestorTitles":["metadata utils","cleanupMetadata"],"duration":0,"failureMessages":[],"fullName":"metadata utils cleanupMetadata should handle no cleanup needed","status":"passed","title":"should handle no cleanup needed"},{"ancestorTitles":["metadata utils","error handling"],"duration":0,"failureMessages":[],"fullName":"metadata utils error handling should handle concurrent access to metadata file","status":"passed","title":"should handle concurrent access to metadata file"},{"ancestorTitles":["metadata utils","error handling"],"duration":3,"failureMessages":[],"fullName":"metadata utils error handling should handle very large metadata files","status":"passed","title":"should handle very large metadata files"}]},{"numFailingTests":0,"numPassingTests":40,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507379,"loadTestEnvironmentEnd":1756185507332,"loadTestEnvironmentStart":1756185507331,"runtime":47,"setupAfterEnvEnd":1756185507345,"setupAfterEnvStart":1756185507341,"setupFilesEnd":1756185507332,"setupFilesStart":1756185507332,"slow":false,"start":1756185507332},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/services/ConfigService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ConfigService","constructor"],"duration":0,"failureMessages":[],"fullName":"ConfigService constructor should create instance with provided FileService","status":"passed","title":"should create instance with provided FileService"},{"ancestorTitles":["ConfigService","constructor"],"duration":0,"failureMessages":[],"fullName":"ConfigService constructor should create instance with default FileService when none provided","status":"passed","title":"should create instance with default FileService when none provided"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":1,"failureMessages":[],"fullName":"ConfigService validateStackName should accept valid stack names","status":"passed","title":"should accept valid stack names"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":7,"failureMessages":[],"fullName":"ConfigService validateStackName should throw ValidationError for non-string names","status":"passed","title":"should throw ValidationError for non-string names"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackName should throw ValidationError for empty string","status":"passed","title":"should throw ValidationError for empty string"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":2,"failureMessages":[],"fullName":"ConfigService validateStackName should throw ValidationError for names with invalid characters","status":"passed","title":"should throw ValidationError for names with invalid characters"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackName should throw ValidationError for names exceeding 100 characters","status":"passed","title":"should throw ValidationError for names exceeding 100 characters"},{"ancestorTitles":["ConfigService","validateStackName"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackName should accept names with exactly 100 characters","status":"passed","title":"should accept names with exactly 100 characters"},{"ancestorTitles":["ConfigService","validateVersion"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateVersion should accept valid semantic versions","status":"passed","title":"should accept valid semantic versions"},{"ancestorTitles":["ConfigService","validateVersion"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateVersion should throw ValidationError for non-string versions","status":"passed","title":"should throw ValidationError for non-string versions"},{"ancestorTitles":["ConfigService","validateVersion"],"duration":2,"failureMessages":[],"fullName":"ConfigService validateVersion should throw ValidationError for invalid semantic versions","status":"passed","title":"should throw ValidationError for invalid semantic versions"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackConfig should accept valid minimal config","status":"passed","title":"should accept valid minimal config"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService validateStackConfig should accept config with all optional fields","status":"passed","title":"should accept config with all optional fields"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService validateStackConfig should throw ValidationError for non-object config","status":"passed","title":"should throw ValidationError for non-object config"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackConfig should throw ValidationError for missing required fields","status":"passed","title":"should throw ValidationError for missing required fields"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackConfig should validate optional description field","status":"passed","title":"should validate optional description field"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService validateStackConfig should validate optional author field","status":"passed","title":"should validate optional author field"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackConfig should validate optional dependencies field","status":"passed","title":"should validate optional dependencies field"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService validateStackConfig should validate optional scripts field","status":"passed","title":"should validate optional scripts field"},{"ancestorTitles":["ConfigService","validateStackConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService validateStackConfig should validate optional settings field","status":"passed","title":"should validate optional settings field"},{"ancestorTitles":["ConfigService","loadConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService loadConfig should load and validate valid config file","status":"passed","title":"should load and validate valid config file"},{"ancestorTitles":["ConfigService","loadConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService loadConfig should throw ConfigurationError for invalid config data","status":"passed","title":"should throw ConfigurationError for invalid config data"},{"ancestorTitles":["ConfigService","loadConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService loadConfig should propagate non-validation file service errors","status":"passed","title":"should propagate non-validation file service errors"},{"ancestorTitles":["ConfigService","loadConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService loadConfig should wrap ValidationErrors in ConfigurationError","status":"passed","title":"should wrap ValidationErrors in ConfigurationError"},{"ancestorTitles":["ConfigService","saveConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService saveConfig should validate and save valid config","status":"passed","title":"should validate and save valid config"},{"ancestorTitles":["ConfigService","saveConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService saveConfig should throw ConfigurationError for invalid config","status":"passed","title":"should throw ConfigurationError for invalid config"},{"ancestorTitles":["ConfigService","saveConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService saveConfig should propagate file service errors","status":"passed","title":"should propagate file service errors"},{"ancestorTitles":["ConfigService","saveConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService saveConfig should wrap ValidationErrors in ConfigurationError","status":"passed","title":"should wrap ValidationErrors in ConfigurationError"},{"ancestorTitles":["ConfigService","createDefaultConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService createDefaultConfig should create default config with name and version","status":"passed","title":"should create default config with name and version"},{"ancestorTitles":["ConfigService","createDefaultConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService createDefaultConfig should create default config with custom version","status":"passed","title":"should create default config with custom version"},{"ancestorTitles":["ConfigService","createDefaultConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService createDefaultConfig should validate stack name","status":"passed","title":"should validate stack name"},{"ancestorTitles":["ConfigService","createDefaultConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService createDefaultConfig should validate version","status":"passed","title":"should validate version"},{"ancestorTitles":["ConfigService","isValidStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService isValidStackConfig should return true for valid config","status":"passed","title":"should return true for valid config"},{"ancestorTitles":["ConfigService","isValidStackConfig"],"duration":0,"failureMessages":[],"fullName":"ConfigService isValidStackConfig should return false for invalid config","status":"passed","title":"should return false for invalid config"},{"ancestorTitles":["ConfigService","isValidStackConfig"],"duration":1,"failureMessages":[],"fullName":"ConfigService isValidStackConfig should return true for config with all optional fields","status":"passed","title":"should return true for config with all optional fields"},{"ancestorTitles":["ConfigService","private validation methods","validateOptionalDescription"],"duration":0,"failureMessages":[],"fullName":"ConfigService private validation methods validateOptionalDescription should handle valid description","status":"passed","title":"should handle valid description"},{"ancestorTitles":["ConfigService","private validation methods","validateOptionalAuthor"],"duration":0,"failureMessages":[],"fullName":"ConfigService private validation methods validateOptionalAuthor should handle valid author","status":"passed","title":"should handle valid author"},{"ancestorTitles":["ConfigService","edge cases and error conditions"],"duration":0,"failureMessages":[],"fullName":"ConfigService edge cases and error conditions should handle extremely large valid configs","status":"passed","title":"should handle extremely large valid configs"},{"ancestorTitles":["ConfigService","edge cases and error conditions"],"duration":1,"failureMessages":[],"fullName":"ConfigService edge cases and error conditions should handle unicode characters in names","status":"passed","title":"should handle unicode characters in names"},{"ancestorTitles":["ConfigService","edge cases and error conditions"],"duration":0,"failureMessages":[],"fullName":"ConfigService edge cases and error conditions should handle pre-release and build metadata versions","status":"passed","title":"should handle pre-release and build metadata versions"}]},{"numFailingTests":0,"numPassingTests":29,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507390,"loadTestEnvironmentEnd":1756185507325,"loadTestEnvironmentStart":1756185507324,"runtime":65,"setupAfterEnvEnd":1756185507343,"setupAfterEnvStart":1756185507334,"setupFilesEnd":1756185507325,"setupFilesStart":1756185507325,"slow":false,"start":1756185507325},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/controllers/StackController.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StackController","constructor"],"duration":1,"failureMessages":[],"fullName":"StackController constructor should initialize with FileService and ConfigService","status":"passed","title":"should initialize with FileService and ConfigService"},{"ancestorTitles":["StackController","handleCreate"],"duration":1,"failureMessages":[],"fullName":"StackController handleCreate should handle successful stack creation","status":"passed","title":"should handle successful stack creation"},{"ancestorTitles":["StackController","handleCreate"],"duration":7,"failureMessages":[],"fullName":"StackController handleCreate should handle creation failure","status":"passed","title":"should handle creation failure"},{"ancestorTitles":["StackController","handleCreate"],"duration":1,"failureMessages":[],"fullName":"StackController handleCreate should handle unexpected errors during creation","status":"passed","title":"should handle unexpected errors during creation"},{"ancestorTitles":["StackController","handleCreate"],"duration":1,"failureMessages":[],"fullName":"StackController handleCreate should show stack trace in development mode","status":"passed","title":"should show stack trace in development mode"},{"ancestorTitles":["StackController","handleCreate"],"duration":0,"failureMessages":[],"fullName":"StackController handleCreate should show stack trace when DEBUG is set","status":"passed","title":"should show stack trace when DEBUG is set"},{"ancestorTitles":["StackController","handleList"],"duration":3,"failureMessages":[],"fullName":"StackController handleList should display list of stacks","status":"passed","title":"should display list of stacks"},{"ancestorTitles":["StackController","handleList"],"duration":0,"failureMessages":[],"fullName":"StackController handleList should handle empty stack list","status":"passed","title":"should handle empty stack list"},{"ancestorTitles":["StackController","handleList"],"duration":1,"failureMessages":[],"fullName":"StackController handleList should handle stacks with missing version","status":"passed","title":"should handle stacks with missing version"},{"ancestorTitles":["StackController","handleList"],"duration":0,"failureMessages":[],"fullName":"StackController handleList should handle stacks with missing component arrays","status":"passed","title":"should handle stacks with missing component arrays"},{"ancestorTitles":["StackController","handleList"],"duration":1,"failureMessages":[],"fullName":"StackController handleList should handle listing failure","status":"passed","title":"should handle listing failure"},{"ancestorTitles":["StackController","handleList"],"duration":0,"failureMessages":[],"fullName":"StackController handleList should handle unexpected errors during listing","status":"passed","title":"should handle unexpected errors during listing"},{"ancestorTitles":["StackController","handleDelete"],"duration":0,"failureMessages":[],"fullName":"StackController handleDelete should handle successful stack deletion","status":"passed","title":"should handle successful stack deletion"},{"ancestorTitles":["StackController","handleDelete"],"duration":1,"failureMessages":[],"fullName":"StackController handleDelete should handle deletion failure","status":"passed","title":"should handle deletion failure"},{"ancestorTitles":["StackController","handleDelete"],"duration":0,"failureMessages":[],"fullName":"StackController handleDelete should handle unexpected errors during deletion","status":"passed","title":"should handle unexpected errors during deletion"},{"ancestorTitles":["StackController","stackExists"],"duration":0,"failureMessages":[],"fullName":"StackController stackExists should return true for existing stack","status":"passed","title":"should return true for existing stack"},{"ancestorTitles":["StackController","stackExists"],"duration":1,"failureMessages":[],"fullName":"StackController stackExists should return false for non-existent stack","status":"passed","title":"should return false for non-existent stack"},{"ancestorTitles":["StackController","loadStack"],"duration":0,"failureMessages":[],"fullName":"StackController loadStack should return stack data on successful load","status":"passed","title":"should return stack data on successful load"},{"ancestorTitles":["StackController","loadStack"],"duration":0,"failureMessages":[],"fullName":"StackController loadStack should return null on load failure","status":"passed","title":"should return null on load failure"},{"ancestorTitles":["StackController","error handling","handleError"],"duration":3,"failureMessages":[],"fullName":"StackController error handling handleError should handle StackNotFoundError","status":"passed","title":"should handle StackNotFoundError"},{"ancestorTitles":["StackController","error handling","handleError"],"duration":0,"failureMessages":[],"fullName":"StackController error handling handleError should handle StackAlreadyExistsError","status":"passed","title":"should handle StackAlreadyExistsError"},{"ancestorTitles":["StackController","error handling","handleError"],"duration":1,"failureMessages":[],"fullName":"StackController error handling handleError should handle ValidationError","status":"passed","title":"should handle ValidationError"},{"ancestorTitles":["StackController","error handling","handleError"],"duration":1,"failureMessages":[],"fullName":"StackController error handling handleError should handle FileSystemError","status":"passed","title":"should handle FileSystemError"},{"ancestorTitles":["StackController","error handling","handleError"],"duration":0,"failureMessages":[],"fullName":"StackController error handling handleError should handle non-StackError as unexpected error","status":"passed","title":"should handle non-StackError as unexpected error"},{"ancestorTitles":["StackController","error handling","handleUnexpectedError"],"duration":1,"failureMessages":[],"fullName":"StackController error handling handleUnexpectedError should handle Error instances","status":"passed","title":"should handle Error instances"},{"ancestorTitles":["StackController","error handling","handleUnexpectedError"],"duration":1,"failureMessages":[],"fullName":"StackController error handling handleUnexpectedError should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions"},{"ancestorTitles":["StackController","error handling","handleUnexpectedError"],"duration":0,"failureMessages":[],"fullName":"StackController error handling handleUnexpectedError should not show stack trace in production mode","status":"passed","title":"should not show stack trace in production mode"},{"ancestorTitles":["StackController","integration scenarios"],"duration":1,"failureMessages":[],"fullName":"StackController integration scenarios should handle multiple operations sequentially","status":"passed","title":"should handle multiple operations sequentially"},{"ancestorTitles":["StackController","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"StackController integration scenarios should handle rapid successive calls","status":"passed","title":"should handle rapid successive calls"}]},{"numFailingTests":0,"numPassingTests":37,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507393,"loadTestEnvironmentEnd":1756185507349,"loadTestEnvironmentStart":1756185507348,"runtime":44,"setupAfterEnvEnd":1756185507364,"setupAfterEnvStart":1756185507358,"setupFilesEnd":1756185507349,"setupFilesStart":1756185507349,"slow":false,"start":1756185507349},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/services/StackService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["StackService","createStack"],"duration":1,"failureMessages":[],"fullName":"StackService createStack should create a new stack with valid data","status":"passed","title":"should create a new stack with valid data"},{"ancestorTitles":["StackService","createStack"],"duration":1,"failureMessages":[],"fullName":"StackService createStack should return error if stack already exists","status":"passed","title":"should return error if stack already exists"},{"ancestorTitles":["StackService","createStack"],"duration":0,"failureMessages":[],"fullName":"StackService createStack should handle invalid stack names","status":"passed","title":"should handle invalid stack names"},{"ancestorTitles":["StackService","createStack"],"duration":0,"failureMessages":[],"fullName":"StackService createStack should handle file system errors gracefully","status":"passed","title":"should handle file system errors gracefully"},{"ancestorTitles":["StackService","loadStack"],"duration":1,"failureMessages":[],"fullName":"StackService loadStack should load an existing stack","status":"passed","title":"should load an existing stack"},{"ancestorTitles":["StackService","loadStack"],"duration":0,"failureMessages":[],"fullName":"StackService loadStack should return error for non-existent stack","status":"passed","title":"should return error for non-existent stack"},{"ancestorTitles":["StackService","loadStack"],"duration":0,"failureMessages":[],"fullName":"StackService loadStack should handle corrupted stack files","status":"passed","title":"should handle corrupted stack files"},{"ancestorTitles":["StackService","saveStack"],"duration":0,"failureMessages":[],"fullName":"StackService saveStack should save stack updates","status":"passed","title":"should save stack updates"},{"ancestorTitles":["StackService","saveStack"],"duration":0,"failureMessages":[],"fullName":"StackService saveStack should handle file system errors during save","status":"passed","title":"should handle file system errors during save"},{"ancestorTitles":["StackService","deleteStack"],"duration":0,"failureMessages":[],"fullName":"StackService deleteStack should delete an existing stack","status":"passed","title":"should delete an existing stack"},{"ancestorTitles":["StackService","deleteStack"],"duration":0,"failureMessages":[],"fullName":"StackService deleteStack should return error for non-existent stack","status":"passed","title":"should return error for non-existent stack"},{"ancestorTitles":["StackService","deleteStack"],"duration":0,"failureMessages":[],"fullName":"StackService deleteStack should require confirmation or force flag","status":"passed","title":"should require confirmation or force flag"},{"ancestorTitles":["StackService","deleteStack"],"duration":0,"failureMessages":[],"fullName":"StackService deleteStack should handle file system errors during deletion","status":"passed","title":"should handle file system errors during deletion"},{"ancestorTitles":["StackService","listStacks"],"duration":1,"failureMessages":[],"fullName":"StackService listStacks should return list of all stacks","status":"passed","title":"should return list of all stacks"},{"ancestorTitles":["StackService","listStacks"],"duration":0,"failureMessages":[],"fullName":"StackService listStacks should return empty array when no stacks exist","status":"passed","title":"should return empty array when no stacks exist"},{"ancestorTitles":["StackService","listStacks"],"duration":0,"failureMessages":[],"fullName":"StackService listStacks should handle corrupted stack files in list","status":"passed","title":"should handle corrupted stack files in list"},{"ancestorTitles":["StackService","stackExists"],"duration":0,"failureMessages":[],"fullName":"StackService stackExists should return true for existing stack","status":"passed","title":"should return true for existing stack"},{"ancestorTitles":["StackService","stackExists"],"duration":0,"failureMessages":[],"fullName":"StackService stackExists should return false for non-existent stack","status":"passed","title":"should return false for non-existent stack"},{"ancestorTitles":["StackService","getStackMetadata"],"duration":2,"failureMessages":[],"fullName":"StackService getStackMetadata should return metadata for existing stack","status":"passed","title":"should return metadata for existing stack"},{"ancestorTitles":["StackService","getStackMetadata"],"duration":1,"failureMessages":[],"fullName":"StackService getStackMetadata should return error for non-existent stack","status":"passed","title":"should return error for non-existent stack"},{"ancestorTitles":["StackService","Error Handling"],"duration":0,"failureMessages":[],"fullName":"StackService Error Handling should handle service initialization errors","status":"passed","title":"should handle service initialization errors"},{"ancestorTitles":["StackService","Error Handling"],"duration":0,"failureMessages":[],"fullName":"StackService Error Handling should handle concurrent access gracefully","status":"passed","title":"should handle concurrent access gracefully"},{"ancestorTitles":["StackService","Performance Tests"],"duration":0,"failureMessages":[],"fullName":"StackService Performance Tests should handle moderate number of stacks efficiently","status":"passed","title":"should handle moderate number of stacks efficiently"},{"ancestorTitles":["StackService","Branch Coverage Improvements","createStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements createStack edge cases should handle stack creation when description is explicitly undefined","status":"passed","title":"should handle stack creation when description is explicitly undefined"},{"ancestorTitles":["StackService","Branch Coverage Improvements","createStack edge cases"],"duration":1,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements createStack edge cases should handle non-Error exceptions in createStack","status":"passed","title":"should handle non-Error exceptions in createStack"},{"ancestorTitles":["StackService","Branch Coverage Improvements","loadStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements loadStack edge cases should handle non-Error exceptions in loadStack","status":"passed","title":"should handle non-Error exceptions in loadStack"},{"ancestorTitles":["StackService","Branch Coverage Improvements","saveStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements saveStack edge cases should handle non-Error exceptions in saveStack","status":"passed","title":"should handle non-Error exceptions in saveStack"},{"ancestorTitles":["StackService","Branch Coverage Improvements","saveStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements saveStack edge cases should update metadata timestamp when saving","status":"passed","title":"should update metadata timestamp when saving"},{"ancestorTitles":["StackService","Branch Coverage Improvements","deleteStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements deleteStack edge cases should handle non-Error exceptions in deleteStack","status":"passed","title":"should handle non-Error exceptions in deleteStack"},{"ancestorTitles":["StackService","Branch Coverage Improvements","deleteStack edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements deleteStack edge cases should allow deletion with force flag even without confirm","status":"passed","title":"should allow deletion with force flag even without confirm"},{"ancestorTitles":["StackService","Branch Coverage Improvements","listStacks edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements listStacks edge cases should handle non-Error exceptions in listStacks","status":"passed","title":"should handle non-Error exceptions in listStacks"},{"ancestorTitles":["StackService","Branch Coverage Improvements","listStacks edge cases"],"duration":1,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements listStacks edge cases should handle stacks with missing metadata files","status":"passed","title":"should handle stacks with missing metadata files"},{"ancestorTitles":["StackService","Branch Coverage Improvements","listStacks edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements listStacks edge cases should sort stacks by creation date with fallback for missing dates","status":"passed","title":"should sort stacks by creation date with fallback for missing dates"},{"ancestorTitles":["StackService","Branch Coverage Improvements","getStackMetadata edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements getStackMetadata edge cases should handle non-Error exceptions in getStackMetadata","status":"passed","title":"should handle non-Error exceptions in getStackMetadata"},{"ancestorTitles":["StackService","Branch Coverage Improvements","getStackMetadata edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements getStackMetadata edge cases should build metadata with fallback values","status":"passed","title":"should build metadata with fallback values"},{"ancestorTitles":["StackService","Branch Coverage Improvements","getStackMetadata edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements getStackMetadata edge cases should extract author from metadata exported_from path","status":"passed","title":"should extract author from metadata exported_from path"},{"ancestorTitles":["StackService","Branch Coverage Improvements","getStackMetadata edge cases"],"duration":0,"failureMessages":[],"fullName":"StackService Branch Coverage Improvements getStackMetadata edge cases should handle metadata without exported_from","status":"passed","title":"should handle metadata without exported_from"}]},{"numFailingTests":0,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507397,"loadTestEnvironmentEnd":1756185507354,"loadTestEnvironmentStart":1756185507352,"runtime":43,"setupAfterEnvEnd":1756185507368,"setupAfterEnvStart":1756185507363,"setupFilesEnd":1756185507354,"setupFilesStart":1756185507354,"slow":false,"start":1756185507354},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/services/FileService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FileService","readJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService readJsonFile should successfully read and parse JSON file","status":"passed","title":"should successfully read and parse JSON file"},{"ancestorTitles":["FileService","readJsonFile"],"duration":8,"failureMessages":[],"fullName":"FileService readJsonFile should throw FileSystemError when file does not exist","status":"passed","title":"should throw FileSystemError when file does not exist"},{"ancestorTitles":["FileService","readJsonFile"],"duration":1,"failureMessages":[],"fullName":"FileService readJsonFile should wrap fs.readJson errors in FileSystemError","status":"passed","title":"should wrap fs.readJson errors in FileSystemError"},{"ancestorTitles":["FileService","readJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService readJsonFile should handle pathExists errors gracefully","status":"passed","title":"should handle pathExists errors gracefully"},{"ancestorTitles":["FileService","readJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService readJsonFile should preserve FileSystemError when already wrapped","status":"passed","title":"should preserve FileSystemError when already wrapped"},{"ancestorTitles":["FileService","readJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService readJsonFile should return typed data when generic type specified","status":"passed","title":"should return typed data when generic type specified"},{"ancestorTitles":["FileService","writeJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeJsonFile should successfully write JSON file with default spacing","status":"passed","title":"should successfully write JSON file with default spacing"},{"ancestorTitles":["FileService","writeJsonFile"],"duration":1,"failureMessages":[],"fullName":"FileService writeJsonFile should write JSON file with custom spacing","status":"passed","title":"should write JSON file with custom spacing"},{"ancestorTitles":["FileService","writeJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeJsonFile should handle directory creation errors","status":"passed","title":"should handle directory creation errors"},{"ancestorTitles":["FileService","writeJsonFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeJsonFile should handle write errors","status":"passed","title":"should handle write errors"},{"ancestorTitles":["FileService","writeJsonFile"],"duration":1,"failureMessages":[],"fullName":"FileService writeJsonFile should handle complex nested objects","status":"passed","title":"should handle complex nested objects"},{"ancestorTitles":["FileService","readTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService readTextFile should successfully read text file","status":"passed","title":"should successfully read text file"},{"ancestorTitles":["FileService","readTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService readTextFile should throw FileSystemError when file does not exist","status":"passed","title":"should throw FileSystemError when file does not exist"},{"ancestorTitles":["FileService","readTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService readTextFile should handle read errors","status":"passed","title":"should handle read errors"},{"ancestorTitles":["FileService","readTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService readTextFile should handle empty files","status":"passed","title":"should handle empty files"},{"ancestorTitles":["FileService","readTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService readTextFile should handle unicode content","status":"passed","title":"should handle unicode content"},{"ancestorTitles":["FileService","writeTextFile"],"duration":1,"failureMessages":[],"fullName":"FileService writeTextFile should successfully write text file","status":"passed","title":"should successfully write text file"},{"ancestorTitles":["FileService","writeTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeTextFile should handle directory creation errors","status":"passed","title":"should handle directory creation errors"},{"ancestorTitles":["FileService","writeTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeTextFile should handle write errors","status":"passed","title":"should handle write errors"},{"ancestorTitles":["FileService","writeTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeTextFile should handle empty content","status":"passed","title":"should handle empty content"},{"ancestorTitles":["FileService","writeTextFile"],"duration":0,"failureMessages":[],"fullName":"FileService writeTextFile should handle unicode content","status":"passed","title":"should handle unicode content"},{"ancestorTitles":["FileService","exists"],"duration":1,"failureMessages":[],"fullName":"FileService exists should return true when file exists","status":"passed","title":"should return true when file exists"},{"ancestorTitles":["FileService","exists"],"duration":0,"failureMessages":[],"fullName":"FileService exists should return false when file does not exist","status":"passed","title":"should return false when file does not exist"},{"ancestorTitles":["FileService","exists"],"duration":0,"failureMessages":[],"fullName":"FileService exists should return false when pathExists throws error","status":"passed","title":"should return false when pathExists throws error"},{"ancestorTitles":["FileService","ensureDir"],"duration":0,"failureMessages":[],"fullName":"FileService ensureDir should successfully create directory","status":"passed","title":"should successfully create directory"},{"ancestorTitles":["FileService","ensureDir"],"duration":0,"failureMessages":[],"fullName":"FileService ensureDir should handle directory creation errors","status":"passed","title":"should handle directory creation errors"},{"ancestorTitles":["FileService","ensureDir"],"duration":0,"failureMessages":[],"fullName":"FileService ensureDir should work with nested directory paths","status":"passed","title":"should work with nested directory paths"},{"ancestorTitles":["FileService","listFiles"],"duration":1,"failureMessages":[],"fullName":"FileService listFiles should list all files when no filter provided","status":"passed","title":"should list all files when no filter provided"},{"ancestorTitles":["FileService","listFiles"],"duration":0,"failureMessages":[],"fullName":"FileService listFiles should return empty array when directory does not exist","status":"passed","title":"should return empty array when directory does not exist"},{"ancestorTitles":["FileService","listFiles"],"duration":0,"failureMessages":[],"fullName":"FileService listFiles should apply filter when provided","status":"passed","title":"should apply filter when provided"},{"ancestorTitles":["FileService","listFiles"],"duration":0,"failureMessages":[],"fullName":"FileService listFiles should handle readdir errors","status":"passed","title":"should handle readdir errors"},{"ancestorTitles":["FileService","listFiles"],"duration":0,"failureMessages":[],"fullName":"FileService listFiles should handle empty directories","status":"passed","title":"should handle empty directories"},{"ancestorTitles":["FileService","listFiles"],"duration":0,"failureMessages":[],"fullName":"FileService listFiles should work with complex filters","status":"passed","title":"should work with complex filters"},{"ancestorTitles":["FileService","copyFile"],"duration":0,"failureMessages":[],"fullName":"FileService copyFile should successfully copy file","status":"passed","title":"should successfully copy file"},{"ancestorTitles":["FileService","copyFile"],"duration":1,"failureMessages":[],"fullName":"FileService copyFile should handle directory creation errors","status":"passed","title":"should handle directory creation errors"},{"ancestorTitles":["FileService","copyFile"],"duration":0,"failureMessages":[],"fullName":"FileService copyFile should handle copy errors","status":"passed","title":"should handle copy errors"},{"ancestorTitles":["FileService","copyFile"],"duration":0,"failureMessages":[],"fullName":"FileService copyFile should work with nested destination paths","status":"passed","title":"should work with nested destination paths"},{"ancestorTitles":["FileService","remove"],"duration":0,"failureMessages":[],"fullName":"FileService remove should successfully remove file","status":"passed","title":"should successfully remove file"},{"ancestorTitles":["FileService","remove"],"duration":0,"failureMessages":[],"fullName":"FileService remove should handle removal errors","status":"passed","title":"should handle removal errors"},{"ancestorTitles":["FileService","remove"],"duration":0,"failureMessages":[],"fullName":"FileService remove should work with directories","status":"passed","title":"should work with directories"},{"ancestorTitles":["FileService","getStats"],"duration":0,"failureMessages":[],"fullName":"FileService getStats should successfully get file stats","status":"passed","title":"should successfully get file stats"},{"ancestorTitles":["FileService","getStats"],"duration":0,"failureMessages":[],"fullName":"FileService getStats should handle stat errors","status":"passed","title":"should handle stat errors"},{"ancestorTitles":["FileService","getStats"],"duration":1,"failureMessages":[],"fullName":"FileService getStats should work with directories","status":"passed","title":"should work with directories"},{"ancestorTitles":["FileService","error handling and edge cases"],"duration":0,"failureMessages":[],"fullName":"FileService error handling and edge cases should handle very long file paths","status":"passed","title":"should handle very long file paths"},{"ancestorTitles":["FileService","error handling and edge cases"],"duration":0,"failureMessages":[],"fullName":"FileService error handling and edge cases should handle special characters in paths","status":"passed","title":"should handle special characters in paths"},{"ancestorTitles":["FileService","error handling and edge cases"],"duration":0,"failureMessages":[],"fullName":"FileService error handling and edge cases should handle concurrent operations","status":"passed","title":"should handle concurrent operations"},{"ancestorTitles":["FileService","error handling and edge cases"],"duration":0,"failureMessages":[],"fullName":"FileService error handling and edge cases should handle null and undefined data gracefully","status":"passed","title":"should handle null and undefined data gracefully"}]},{"numFailingTests":0,"numPassingTests":30,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507442,"loadTestEnvironmentEnd":1756185507388,"loadTestEnvironmentStart":1756185507386,"runtime":54,"setupAfterEnvEnd":1756185507424,"setupAfterEnvStart":1756185507409,"setupFilesEnd":1756185507388,"setupFilesStart":1756185507388,"slow":false,"start":1756185507388},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/delete.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["deleteAction","successful deletion workflow"],"duration":1,"failureMessages":[],"fullName":"deleteAction successful deletion workflow should delete a stack successfully with metadata cleanup","status":"passed","title":"should delete a stack successfully with metadata cleanup"},{"ancestorTitles":["deleteAction","successful deletion workflow"],"duration":0,"failureMessages":[],"fullName":"deleteAction successful deletion workflow should delete a stack successfully without metadata cleanup","status":"passed","title":"should delete a stack successfully without metadata cleanup"},{"ancestorTitles":["deleteAction","successful deletion workflow"],"duration":0,"failureMessages":[],"fullName":"deleteAction successful deletion workflow should show local dev message when in local development mode","status":"passed","title":"should show local dev message when in local development mode"},{"ancestorTitles":["deleteAction","successful deletion workflow"],"duration":1,"failureMessages":[],"fullName":"deleteAction successful deletion workflow should handle stack names with special characters","status":"passed","title":"should handle stack names with special characters"},{"ancestorTitles":["deleteAction","stack ID validation"],"duration":0,"failureMessages":[],"fullName":"deleteAction stack ID validation should reject stack ID without slash separator","status":"passed","title":"should reject stack ID without slash separator"},{"ancestorTitles":["deleteAction","stack ID validation"],"duration":0,"failureMessages":[],"fullName":"deleteAction stack ID validation should reject stack ID with empty org","status":"passed","title":"should reject stack ID with empty org"},{"ancestorTitles":["deleteAction","stack ID validation"],"duration":0,"failureMessages":[],"fullName":"deleteAction stack ID validation should reject stack ID with empty name","status":"passed","title":"should reject stack ID with empty name"},{"ancestorTitles":["deleteAction","stack ID validation"],"duration":1,"failureMessages":[],"fullName":"deleteAction stack ID validation should reject stack ID with only slash","status":"passed","title":"should reject stack ID with only slash"},{"ancestorTitles":["deleteAction","stack ID validation"],"duration":0,"failureMessages":[],"fullName":"deleteAction stack ID validation should reject empty stack ID","status":"passed","title":"should reject empty stack ID"},{"ancestorTitles":["deleteAction","authentication errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction authentication errors should handle authentication failure","status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["deleteAction","authentication errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction authentication errors should handle authentication timeout","status":"passed","title":"should handle authentication timeout"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle 404 not found error","status":"passed","title":"should handle 404 not found error"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle 403 forbidden error","status":"passed","title":"should handle 403 forbidden error"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":1,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle 500 server error","status":"passed","title":"should handle 500 server error"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle API error without response body","status":"passed","title":"should handle API error without response body"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle network error during deletion","status":"passed","title":"should handle network error during deletion"},{"ancestorTitles":["deleteAction","API deletion errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction API deletion errors should handle response body parsing error","status":"passed","title":"should handle response body parsing error"},{"ancestorTitles":["deleteAction","metadata cleanup errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction metadata cleanup errors should fail deletion if metadata lookup fails","status":"passed","title":"should fail deletion if metadata lookup fails"},{"ancestorTitles":["deleteAction","metadata cleanup errors"],"duration":0,"failureMessages":[],"fullName":"deleteAction metadata cleanup errors should fail deletion if metadata removal fails","status":"passed","title":"should fail deletion if metadata removal fails"},{"ancestorTitles":["deleteAction","edge cases and error scenarios"],"duration":1,"failureMessages":[],"fullName":"deleteAction edge cases and error scenarios should handle non-Error objects thrown as exceptions","status":"passed","title":"should handle non-Error objects thrown as exceptions"},{"ancestorTitles":["deleteAction","edge cases and error scenarios"],"duration":0,"failureMessages":[],"fullName":"deleteAction edge cases and error scenarios should handle null error thrown","status":"passed","title":"should handle null error thrown"},{"ancestorTitles":["deleteAction","edge cases and error scenarios"],"duration":0,"failureMessages":[],"fullName":"deleteAction edge cases and error scenarios should handle undefined error thrown","status":"passed","title":"should handle undefined error thrown"},{"ancestorTitles":["deleteAction","edge cases and error scenarios"],"duration":0,"failureMessages":[],"fullName":"deleteAction edge cases and error scenarios should handle extremely long stack IDs","status":"passed","title":"should handle extremely long stack IDs"},{"ancestorTitles":["deleteAction","edge cases and error scenarios"],"duration":0,"failureMessages":[],"fullName":"deleteAction edge cases and error scenarios should handle stack ID with multiple slashes","status":"passed","title":"should handle stack ID with multiple slashes"},{"ancestorTitles":["deleteAction","API configuration variations"],"duration":0,"failureMessages":[],"fullName":"deleteAction API configuration variations should use custom API base URL","status":"passed","title":"should use custom API base URL"},{"ancestorTitles":["deleteAction","API configuration variations"],"duration":0,"failureMessages":[],"fullName":"deleteAction API configuration variations should handle API URL with trailing slash","status":"passed","title":"should handle API URL with trailing slash"},{"ancestorTitles":["deleteAction","console output and user experience"],"duration":0,"failureMessages":[],"fullName":"deleteAction console output and user experience should display proper deletion start message","status":"passed","title":"should display proper deletion start message"},{"ancestorTitles":["deleteAction","console output and user experience"],"duration":1,"failureMessages":[],"fullName":"deleteAction console output and user experience should display proper success message with stack ID","status":"passed","title":"should display proper success message with stack ID"},{"ancestorTitles":["deleteAction","console output and user experience"],"duration":0,"failureMessages":[],"fullName":"deleteAction console output and user experience should display metadata cleanup confirmation","status":"passed","title":"should display metadata cleanup confirmation"},{"ancestorTitles":["deleteAction","console output and user experience"],"duration":0,"failureMessages":[],"fullName":"deleteAction console output and user experience should use proper color functions for error messages","status":"passed","title":"should use proper color functions for error messages"}]},{"numFailingTests":0,"numPassingTests":27,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507444,"loadTestEnvironmentEnd":1756185507398,"loadTestEnvironmentStart":1756185507397,"runtime":46,"setupAfterEnvEnd":1756185507424,"setupAfterEnvStart":1756185507409,"setupFilesEnd":1756185507398,"setupFilesStart":1756185507398,"slow":false,"start":1756185507398},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/clean.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["cleanAction","validateClaudeConfig"],"duration":1,"failureMessages":[],"fullName":"cleanAction validateClaudeConfig should return null when config file does not exist","status":"passed","title":"should return null when config file does not exist"},{"ancestorTitles":["cleanAction","validateClaudeConfig"],"duration":0,"failureMessages":[],"fullName":"cleanAction validateClaudeConfig should return null when projects property is missing","status":"passed","title":"should return null when projects property is missing"},{"ancestorTitles":["cleanAction","validateClaudeConfig"],"duration":0,"failureMessages":[],"fullName":"cleanAction validateClaudeConfig should return null when projects property is not an object","status":"passed","title":"should return null when projects property is not an object"},{"ancestorTitles":["cleanAction","validateClaudeConfig"],"duration":0,"failureMessages":[],"fullName":"cleanAction validateClaudeConfig should return null when projects object is empty","status":"passed","title":"should return null when projects object is empty"},{"ancestorTitles":["cleanAction","checkProjectsExistence"],"duration":1,"failureMessages":[],"fullName":"cleanAction checkProjectsExistence should identify existing and missing projects","status":"passed","title":"should identify existing and missing projects"},{"ancestorTitles":["cleanAction","checkProjectsExistence"],"duration":0,"failureMessages":[],"fullName":"cleanAction checkProjectsExistence should handle concurrent path existence checks","status":"passed","title":"should handle concurrent path existence checks"},{"ancestorTitles":["cleanAction","calculateFileSavings"],"duration":0,"failureMessages":[],"fullName":"cleanAction calculateFileSavings should calculate accurate file size savings","status":"passed","title":"should calculate accurate file size savings"},{"ancestorTitles":["cleanAction","performCleanup"],"duration":1,"failureMessages":[],"fullName":"cleanAction performCleanup should perform actual cleanup when not in dry run mode","status":"passed","title":"should perform actual cleanup when not in dry run mode"},{"ancestorTitles":["cleanAction","performCleanup"],"duration":0,"failureMessages":[],"fullName":"cleanAction performCleanup should skip cleanup in dry run mode","status":"passed","title":"should skip cleanup in dry run mode"},{"ancestorTitles":["cleanAction","performCleanup"],"duration":0,"failureMessages":[],"fullName":"cleanAction performCleanup should preserve non-project config properties","status":"passed","title":"should preserve non-project config properties"},{"ancestorTitles":["cleanAction","happy path scenarios"],"duration":1,"failureMessages":[],"fullName":"cleanAction happy path scenarios should successfully clean missing projects","status":"passed","title":"should successfully clean missing projects"},{"ancestorTitles":["cleanAction","happy path scenarios"],"duration":0,"failureMessages":[],"fullName":"cleanAction happy path scenarios should handle case when all projects exist","status":"passed","title":"should handle case when all projects exist"},{"ancestorTitles":["cleanAction","error handling"],"duration":1,"failureMessages":[],"fullName":"cleanAction error handling should handle JSON parsing errors","status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["cleanAction","error handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction error handling should handle file system write errors","status":"passed","title":"should handle file system write errors"},{"ancestorTitles":["cleanAction","error handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction error handling should handle path existence check errors","status":"passed","title":"should handle path existence check errors"},{"ancestorTitles":["cleanAction","error handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction error handling should handle non-Error thrown objects","status":"passed","title":"should handle non-Error thrown objects"},{"ancestorTitles":["cleanAction","error handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction error handling should handle undefined thrown objects","status":"passed","title":"should handle undefined thrown objects"},{"ancestorTitles":["cleanAction","console output and colors"],"duration":1,"failureMessages":[],"fullName":"cleanAction console output and colors should use proper colors for different message types","status":"passed","title":"should use proper colors for different message types"},{"ancestorTitles":["cleanAction","console output and colors"],"duration":0,"failureMessages":[],"fullName":"cleanAction console output and colors should display project count correctly","status":"passed","title":"should display project count correctly"},{"ancestorTitles":["cleanAction","console output and colors"],"duration":0,"failureMessages":[],"fullName":"cleanAction console output and colors should display multiple missing projects correctly","status":"passed","title":"should display multiple missing projects correctly"},{"ancestorTitles":["cleanAction","options handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction options handling should handle default empty options","status":"passed","title":"should handle default empty options"},{"ancestorTitles":["cleanAction","options handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction options handling should handle undefined options","status":"passed","title":"should handle undefined options"},{"ancestorTitles":["cleanAction","options handling"],"duration":0,"failureMessages":[],"fullName":"cleanAction options handling should respect dryRun: false option","status":"passed","title":"should respect dryRun: false option"},{"ancestorTitles":["cleanAction","edge cases"],"duration":1,"failureMessages":[],"fullName":"cleanAction edge cases should handle projects with special characters in paths","status":"passed","title":"should handle projects with special characters in paths"},{"ancestorTitles":["cleanAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"cleanAction edge cases should handle empty project objects","status":"passed","title":"should handle empty project objects"},{"ancestorTitles":["cleanAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"cleanAction edge cases should handle very large project lists efficiently","status":"passed","title":"should handle very large project lists efficiently"},{"ancestorTitles":["cleanAction","file size calculation accuracy"],"duration":0,"failureMessages":[],"fullName":"cleanAction file size calculation accuracy should calculate file sizes with proper precision","status":"passed","title":"should calculate file sizes with proper precision"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507446,"loadTestEnvironmentEnd":1756185507397,"loadTestEnvironmentStart":1756185507395,"runtime":49,"setupAfterEnvEnd":1756185507424,"setupAfterEnvStart":1756185507409,"setupFilesEnd":1756185507397,"setupFilesStart":1756185507397,"slow":false,"start":1756185507397},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/rename.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["renameAction","successful rename scenarios"],"duration":2,"failureMessages":[],"fullName":"renameAction successful rename scenarios should rename a published stack successfully","status":"passed","title":"should rename a published stack successfully"},{"ancestorTitles":["renameAction","successful rename scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction successful rename scenarios should handle same URL case (no redirect message)","status":"passed","title":"should handle same URL case (no redirect message)"},{"ancestorTitles":["renameAction","successful rename scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction successful rename scenarios should show local dev message when in local development","status":"passed","title":"should show local dev message when in local development"},{"ancestorTitles":["renameAction","successful rename scenarios"],"duration":1,"failureMessages":[],"fullName":"renameAction successful rename scenarios should handle stack without version (default to 1.0.0)","status":"passed","title":"should handle stack without version (default to 1.0.0)"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when stack file does not exist","status":"passed","title":"should fail when stack file does not exist"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when stack is not published","status":"passed","title":"should fail when stack is not published"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when stack has invalid published_stack_id format","status":"passed","title":"should fail when stack has invalid published_stack_id format"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when authentication fails","status":"passed","title":"should fail when authentication fails"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when API request fails with status error","status":"passed","title":"should fail when API request fails with status error"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when API request fails without response body","status":"passed","title":"should fail when API request fails without response body"},{"ancestorTitles":["renameAction","error scenarios"],"duration":1,"failureMessages":[],"fullName":"renameAction error scenarios should fail when API response format is invalid","status":"passed","title":"should fail when API response format is invalid"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when file operations fail","status":"passed","title":"should fail when file operations fail"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should fail when metadata save fails","status":"passed","title":"should fail when metadata save fails"},{"ancestorTitles":["renameAction","error scenarios"],"duration":0,"failureMessages":[],"fullName":"renameAction error scenarios should handle non-Error thrown values","status":"passed","title":"should handle non-Error thrown values"},{"ancestorTitles":["renameAction","API response handling"],"duration":0,"failureMessages":[],"fullName":"renameAction API response handling should handle API response with missing fields (use defaults)","status":"passed","title":"should handle API response with missing fields (use defaults)"},{"ancestorTitles":["renameAction","API response handling"],"duration":1,"failureMessages":[],"fullName":"renameAction API response handling should handle fetch network error","status":"passed","title":"should handle fetch network error"},{"ancestorTitles":["renameAction","API response handling"],"duration":0,"failureMessages":[],"fullName":"renameAction API response handling should handle JSON parsing error in error response","status":"passed","title":"should handle JSON parsing error in error response"},{"ancestorTitles":["renameAction","file path handling"],"duration":0,"failureMessages":[],"fullName":"renameAction file path handling should use correct stack file path based on current directory","status":"passed","title":"should use correct stack file path based on current directory"},{"ancestorTitles":["renameAction","file path handling"],"duration":1,"failureMessages":[],"fullName":"renameAction file path handling should handle empty directory name","status":"passed","title":"should handle empty directory name"},{"ancestorTitles":["renameAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"renameAction edge cases should handle stack without metadata","status":"passed","title":"should handle stack without metadata"},{"ancestorTitles":["renameAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"renameAction edge cases should handle empty new title","status":"passed","title":"should handle empty new title"},{"ancestorTitles":["renameAction","edge cases"],"duration":0,"failureMessages":[],"fullName":"renameAction edge cases should handle special characters in new title","status":"passed","title":"should handle special characters in new title"}]},{"numFailingTests":0,"numPassingTests":23,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507448,"loadTestEnvironmentEnd":1756185507400,"loadTestEnvironmentStart":1756185507399,"runtime":48,"setupAfterEnvEnd":1756185507424,"setupAfterEnvStart":1756185507409,"setupFilesEnd":1756185507400,"setupFilesStart":1756185507400,"slow":false,"start":1756185507400},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/install.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["installAction","basic functionality"],"duration":1,"failureMessages":[],"fullName":"installAction basic functionality should install a stack successfully","status":"passed","title":"should install a stack successfully"},{"ancestorTitles":["installAction","basic functionality"],"duration":0,"failureMessages":[],"fullName":"installAction basic functionality should show local dev API URL when in local development mode","status":"passed","title":"should show local dev API URL when in local development mode"},{"ancestorTitles":["installAction","basic functionality"],"duration":1,"failureMessages":[],"fullName":"installAction basic functionality should handle stack ID validation","status":"passed","title":"should handle stack ID validation"},{"ancestorTitles":["installAction","basic functionality"],"duration":0,"failureMessages":[],"fullName":"installAction basic functionality should check MCP dependencies when stack has MCP servers","status":"passed","title":"should check MCP dependencies when stack has MCP servers"},{"ancestorTitles":["installAction","basic functionality"],"duration":0,"failureMessages":[],"fullName":"installAction basic functionality should handle installation options","status":"passed","title":"should handle installation options"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle invalid stack ID format","status":"passed","title":"should handle invalid stack ID format"},{"ancestorTitles":["installAction","error handling"],"duration":1,"failureMessages":[],"fullName":"installAction error handling should handle API fetch errors","status":"passed","title":"should handle API fetch errors"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle network errors","status":"passed","title":"should handle network errors"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle JSON parsing errors","status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle file system errors during installation","status":"passed","title":"should handle file system errors during installation"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle MCP dependency check errors","status":"passed","title":"should handle MCP dependency check errors"},{"ancestorTitles":["installAction","error handling"],"duration":0,"failureMessages":[],"fullName":"installAction error handling should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions"},{"ancestorTitles":["installAction","stack conversion and processing"],"duration":1,"failureMessages":[],"fullName":"installAction stack conversion and processing should handle remote stack with minimal data","status":"passed","title":"should handle remote stack with minimal data"},{"ancestorTitles":["installAction","stack conversion and processing"],"duration":0,"failureMessages":[],"fullName":"installAction stack conversion and processing should handle remote stack with complex file structure","status":"passed","title":"should handle remote stack with complex file structure"},{"ancestorTitles":["installAction","stack conversion and processing"],"duration":0,"failureMessages":[],"fullName":"installAction stack conversion and processing should handle stack without MCP servers","status":"passed","title":"should handle stack without MCP servers"},{"ancestorTitles":["installAction","installation options"],"duration":0,"failureMessages":[],"fullName":"installAction installation options should handle overwrite option","status":"passed","title":"should handle overwrite option"},{"ancestorTitles":["installAction","installation options"],"duration":0,"failureMessages":[],"fullName":"installAction installation options should handle globalOnly option","status":"passed","title":"should handle globalOnly option"},{"ancestorTitles":["installAction","installation options"],"duration":0,"failureMessages":[],"fullName":"installAction installation options should handle localOnly option","status":"passed","title":"should handle localOnly option"},{"ancestorTitles":["installAction","installation options"],"duration":1,"failureMessages":[],"fullName":"installAction installation options should handle combined options","status":"passed","title":"should handle combined options"},{"ancestorTitles":["installAction","API configuration"],"duration":0,"failureMessages":[],"fullName":"installAction API configuration should use production API by default","status":"passed","title":"should use production API by default"},{"ancestorTitles":["installAction","API configuration"],"duration":0,"failureMessages":[],"fullName":"installAction API configuration should handle different API configurations","status":"passed","title":"should handle different API configurations"},{"ancestorTitles":["installAction","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"installAction integration scenarios should handle complete installation workflow","status":"passed","title":"should handle complete installation workflow"},{"ancestorTitles":["installAction","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"installAction integration scenarios should handle rapid successive installations","status":"passed","title":"should handle rapid successive installations"}]},{"numFailingTests":0,"numPassingTests":32,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507449,"loadTestEnvironmentEnd":1756185507380,"loadTestEnvironmentStart":1756185507379,"runtime":69,"setupAfterEnvEnd":1756185507424,"setupAfterEnvStart":1756185507409,"setupFilesEnd":1756185507380,"setupFilesStart":1756185507380,"slow":false,"start":1756185507380},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/actions/publish.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["publishAction","basic publishing workflow"],"duration":3,"failureMessages":[],"fullName":"publishAction basic publishing workflow should publish a new stack successfully","status":"passed","title":"should publish a new stack successfully"},{"ancestorTitles":["publishAction","basic publishing workflow"],"duration":0,"failureMessages":[],"fullName":"publishAction basic publishing workflow should update existing stack successfully","status":"passed","title":"should update existing stack successfully"},{"ancestorTitles":["publishAction","basic publishing workflow"],"duration":1,"failureMessages":[],"fullName":"publishAction basic publishing workflow should handle user cancellation","status":"passed","title":"should handle user cancellation"},{"ancestorTitles":["publishAction","basic publishing workflow"],"duration":0,"failureMessages":[],"fullName":"publishAction basic publishing workflow should create new stack when user chooses \"new\" for existing stack","status":"passed","title":"should create new stack when user chooses \"new\" for existing stack"},{"ancestorTitles":["publishAction","authentication"],"duration":0,"failureMessages":[],"fullName":"publishAction authentication should authenticate before publishing","status":"passed","title":"should authenticate before publishing"},{"ancestorTitles":["publishAction","authentication"],"duration":0,"failureMessages":[],"fullName":"publishAction authentication should handle authentication failure","status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["publishAction","stack validation"],"duration":1,"failureMessages":[],"fullName":"publishAction stack validation should validate stack exists before publishing","status":"passed","title":"should validate stack exists before publishing"},{"ancestorTitles":["publishAction","stack validation"],"duration":0,"failureMessages":[],"fullName":"publishAction stack validation should validate stack name consistency for updates","status":"passed","title":"should validate stack name consistency for updates"},{"ancestorTitles":["publishAction","stack validation"],"duration":0,"failureMessages":[],"fullName":"publishAction stack validation should handle JSON parsing errors","status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["publishAction","API interactions"],"duration":0,"failureMessages":[],"fullName":"publishAction API interactions should handle successful API response with org/name","status":"passed","title":"should handle successful API response with org/name"},{"ancestorTitles":["publishAction","API interactions"],"duration":0,"failureMessages":[],"fullName":"publishAction API interactions should handle API response with organizationUsername","status":"passed","title":"should handle API response with organizationUsername"},{"ancestorTitles":["publishAction","API interactions"],"duration":1,"failureMessages":[],"fullName":"publishAction API interactions should extract stack ID from URL when org/name not available","status":"passed","title":"should extract stack ID from URL when org/name not available"},{"ancestorTitles":["publishAction","API interactions"],"duration":0,"failureMessages":[],"fullName":"publishAction API interactions should handle API errors","status":"passed","title":"should handle API errors"},{"ancestorTitles":["publishAction","API interactions"],"duration":0,"failureMessages":[],"fullName":"publishAction API interactions should handle network errors","status":"passed","title":"should handle network errors"},{"ancestorTitles":["publishAction","API interactions"],"duration":0,"failureMessages":[],"fullName":"publishAction API interactions should handle API response without valid stack ID","status":"passed","title":"should handle API response without valid stack ID"},{"ancestorTitles":["publishAction","user input handling"],"duration":1,"failureMessages":[],"fullName":"publishAction user input handling should handle update confirmation","status":"passed","title":"should handle update confirmation"},{"ancestorTitles":["publishAction","user input handling"],"duration":0,"failureMessages":[],"fullName":"publishAction user input handling should handle invalid input and cancel","status":"passed","title":"should handle invalid input and cancel"},{"ancestorTitles":["publishAction","user input handling"],"duration":0,"failureMessages":[],"fullName":"publishAction user input handling should handle empty input as cancel","status":"passed","title":"should handle empty input as cancel"},{"ancestorTitles":["publishAction","stack payload preparation"],"duration":1,"failureMessages":[],"fullName":"publishAction stack payload preparation should prepare payload for new stack with all components","status":"passed","title":"should prepare payload for new stack with all components"},{"ancestorTitles":["publishAction","stack payload preparation"],"duration":0,"failureMessages":[],"fullName":"publishAction stack payload preparation should prepare minimal payload for update","status":"passed","title":"should prepare minimal payload for update"},{"ancestorTitles":["publishAction","metadata and file operations"],"duration":0,"failureMessages":[],"fullName":"publishAction metadata and file operations should save metadata after successful publish","status":"passed","title":"should save metadata after successful publish"},{"ancestorTitles":["publishAction","metadata and file operations"],"duration":1,"failureMessages":[],"fullName":"publishAction metadata and file operations should update stack file with publish metadata","status":"passed","title":"should update stack file with publish metadata"},{"ancestorTitles":["publishAction","metadata and file operations"],"duration":0,"failureMessages":[],"fullName":"publishAction metadata and file operations should handle custom stack file path","status":"passed","title":"should handle custom stack file path"},{"ancestorTitles":["publishAction","local development mode"],"duration":0,"failureMessages":[],"fullName":"publishAction local development mode should show local API URL in development mode","status":"passed","title":"should show local API URL in development mode"},{"ancestorTitles":["publishAction","result display"],"duration":0,"failureMessages":[],"fullName":"publishAction result display should display publish result with component count","status":"passed","title":"should display publish result with component count"},{"ancestorTitles":["publishAction","result display"],"duration":0,"failureMessages":[],"fullName":"publishAction result display should display update result with preserved name note","status":"passed","title":"should display update result with preserved name note"},{"ancestorTitles":["publishAction","error edge cases"],"duration":1,"failureMessages":[],"fullName":"publishAction error edge cases should handle metadata loading errors","status":"passed","title":"should handle metadata loading errors"},{"ancestorTitles":["publishAction","error edge cases"],"duration":0,"failureMessages":[],"fullName":"publishAction error edge cases should handle API response text parsing errors","status":"passed","title":"should handle API response text parsing errors"},{"ancestorTitles":["publishAction","error edge cases"],"duration":0,"failureMessages":[],"fullName":"publishAction error edge cases should handle invalid URL format in API response","status":"passed","title":"should handle invalid URL format in API response"},{"ancestorTitles":["publishAction","error edge cases"],"duration":1,"failureMessages":[],"fullName":"publishAction error edge cases should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions"},{"ancestorTitles":["publishAction","integration scenarios"],"duration":0,"failureMessages":[],"fullName":"publishAction integration scenarios should handle complete new stack publish workflow","status":"passed","title":"should handle complete new stack publish workflow"},{"ancestorTitles":["publishAction","integration scenarios"],"duration":1,"failureMessages":[],"fullName":"publishAction integration scenarios should handle complete update workflow","status":"passed","title":"should handle complete update workflow"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507472,"loadTestEnvironmentEnd":1756185507449,"loadTestEnvironmentStart":1756185507448,"runtime":23,"setupAfterEnvEnd":1756185507464,"setupAfterEnvStart":1756185507457,"setupFilesEnd":1756185507449,"setupFilesStart":1756185507449,"slow":false,"start":1756185507449},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/api.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["API Utility Functions","isLocalDev"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions isLocalDev should return true when CLAUDE_STACKS_LOCAL_DEV is set","status":"passed","title":"should return true when CLAUDE_STACKS_LOCAL_DEV is set"},{"ancestorTitles":["API Utility Functions","isLocalDev"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions isLocalDev should return true when CLAUDE_STACKS_LOCAL_DEV is set to any truthy value","status":"passed","title":"should return true when CLAUDE_STACKS_LOCAL_DEV is set to any truthy value"},{"ancestorTitles":["API Utility Functions","isLocalDev"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions isLocalDev should return false when CLAUDE_STACKS_LOCAL_DEV is not set","status":"passed","title":"should return false when CLAUDE_STACKS_LOCAL_DEV is not set"},{"ancestorTitles":["API Utility Functions","isLocalDev"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions isLocalDev should return false when CLAUDE_STACKS_LOCAL_DEV is set to falsy values","status":"passed","title":"should return false when CLAUDE_STACKS_LOCAL_DEV is set to falsy values"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should return production config by default","status":"passed","title":"should return production config by default"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should return local development config when CLAUDE_STACKS_LOCAL_DEV is set","status":"passed","title":"should return local development config when CLAUDE_STACKS_LOCAL_DEV is set"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should have consistent structure between environments","status":"passed","title":"should have consistent structure between environments"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should return valid URLs","status":"passed","title":"should return valid URLs"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should use HTTPS in production","status":"passed","title":"should use HTTPS in production"},{"ancestorTitles":["API Utility Functions","getApiConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions getApiConfig should allow custom API URL via environment variable","status":"passed","title":"should allow custom API URL via environment variable"},{"ancestorTitles":["API Utility Functions","oauthConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions oauthConfig should have required OAuth configuration properties","status":"passed","title":"should have required OAuth configuration properties"},{"ancestorTitles":["API Utility Functions","oauthConfig"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions oauthConfig should have valid OAuth values","status":"passed","title":"should have valid OAuth values"},{"ancestorTitles":["API Utility Functions","oauthConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions oauthConfig should use secure redirect URI in production","status":"passed","title":"should use secure redirect URI in production"},{"ancestorTitles":["API Utility Functions","oauthConfig"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions oauthConfig should have appropriate scope for Claude Stacks","status":"passed","title":"should have appropriate scope for Claude Stacks"},{"ancestorTitles":["API Utility Functions","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions Configuration Validation should handle missing environment variables gracefully","status":"passed","title":"should handle missing environment variables gracefully"},{"ancestorTitles":["API Utility Functions","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions Configuration Validation should validate API URLs are accessible format","status":"passed","title":"should validate API URLs are accessible format"},{"ancestorTitles":["API Utility Functions","Environment-specific behavior"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions Environment-specific behavior should adapt to different NODE_ENV values","status":"passed","title":"should adapt to different NODE_ENV values"},{"ancestorTitles":["API Utility Functions","Environment-specific behavior"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions Environment-specific behavior should prioritize explicit local dev flag over NODE_ENV","status":"passed","title":"should prioritize explicit local dev flag over NODE_ENV"},{"ancestorTitles":["API Utility Functions","Integration with other utilities"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions Integration with other utilities should provide config that works with fetch","status":"passed","title":"should provide config that works with fetch"},{"ancestorTitles":["API Utility Functions","Integration with other utilities"],"duration":0,"failureMessages":[],"fullName":"API Utility Functions Integration with other utilities should provide OAuth config compatible with browser flow","status":"passed","title":"should provide OAuth config compatible with browser flow"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507474,"loadTestEnvironmentEnd":1756185507449,"loadTestEnvironmentStart":1756185507448,"runtime":24,"setupAfterEnvEnd":1756185507464,"setupAfterEnvStart":1756185507458,"setupFilesEnd":1756185507450,"setupFilesStart":1756185507450,"slow":false,"start":1756185507450},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/colors.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["colors utility","color palette"],"duration":0,"failureMessages":[],"fullName":"colors utility color palette should provide all required color functions","status":"passed","title":"should provide all required color functions"},{"ancestorTitles":["colors utility","color palette"],"duration":0,"failureMessages":[],"fullName":"colors utility color palette should apply colors to text","status":"passed","title":"should apply colors to text"},{"ancestorTitles":["colors utility","color palette"],"duration":0,"failureMessages":[],"fullName":"colors utility color palette should handle description function correctly","status":"passed","title":"should handle description function correctly"},{"ancestorTitles":["colors utility","NO_COLOR environment variable"],"duration":1,"failureMessages":[],"fullName":"colors utility NO_COLOR environment variable should disable colors when NO_COLOR is set","status":"passed","title":"should disable colors when NO_COLOR is set"},{"ancestorTitles":["colors utility","NO_COLOR environment variable"],"duration":1,"failureMessages":[],"fullName":"colors utility NO_COLOR environment variable should disable colors when NO_COLOR is empty string","status":"passed","title":"should disable colors when NO_COLOR is empty string"},{"ancestorTitles":["colors utility","FORCE_COLOR environment variable"],"duration":0,"failureMessages":[],"fullName":"colors utility FORCE_COLOR environment variable should force colors when FORCE_COLOR is set to 1","status":"passed","title":"should force colors when FORCE_COLOR is set to 1"},{"ancestorTitles":["colors utility","FORCE_COLOR environment variable"],"duration":1,"failureMessages":[],"fullName":"colors utility FORCE_COLOR environment variable should force colors when FORCE_COLOR is set to 2","status":"passed","title":"should force colors when FORCE_COLOR is set to 2"},{"ancestorTitles":["colors utility","FORCE_COLOR environment variable"],"duration":0,"failureMessages":[],"fullName":"colors utility FORCE_COLOR environment variable should force colors when FORCE_COLOR is set to 3","status":"passed","title":"should force colors when FORCE_COLOR is set to 3"},{"ancestorTitles":["colors utility","FORCE_COLOR environment variable"],"duration":1,"failureMessages":[],"fullName":"colors utility FORCE_COLOR environment variable should handle invalid FORCE_COLOR values","status":"passed","title":"should handle invalid FORCE_COLOR values"},{"ancestorTitles":["colors utility","environment variable precedence"],"duration":0,"failureMessages":[],"fullName":"colors utility environment variable precedence should prioritize NO_COLOR over FORCE_COLOR","status":"passed","title":"should prioritize NO_COLOR over FORCE_COLOR"},{"ancestorTitles":["colors utility","multiple text styling"],"duration":0,"failureMessages":[],"fullName":"colors utility multiple text styling should handle empty strings","status":"passed","title":"should handle empty strings"},{"ancestorTitles":["colors utility","multiple text styling"],"duration":0,"failureMessages":[],"fullName":"colors utility multiple text styling should handle multi-line text","status":"passed","title":"should handle multi-line text"},{"ancestorTitles":["colors utility","multiple text styling"],"duration":1,"failureMessages":[],"fullName":"colors utility multiple text styling should handle special characters","status":"passed","title":"should handle special characters"},{"ancestorTitles":["colors utility","color categories functionality"],"duration":0,"failureMessages":[],"fullName":"colors utility color categories functionality should have distinct primary element colors","status":"passed","title":"should have distinct primary element colors"},{"ancestorTitles":["colors utility","color categories functionality"],"duration":0,"failureMessages":[],"fullName":"colors utility color categories functionality should have distinct status colors","status":"passed","title":"should have distinct status colors"},{"ancestorTitles":["colors utility","color categories functionality"],"duration":0,"failureMessages":[],"fullName":"colors utility color categories functionality should have distinct UI element colors","status":"passed","title":"should have distinct UI element colors"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507477,"loadTestEnvironmentEnd":1756185507453,"loadTestEnvironmentStart":1756185507451,"runtime":24,"setupAfterEnvEnd":1756185507468,"setupAfterEnvStart":1756185507462,"setupFilesEnd":1756185507453,"setupFilesStart":1756185507453,"slow":false,"start":1756185507453},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/input.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should write prompt to stdout","status":"passed","title":"should write prompt to stdout"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":1,"failureMessages":[],"fullName":"input utilities readSingleChar should setup stdin properly when TTY is available","status":"passed","title":"should setup stdin properly when TTY is available"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should not set raw mode when TTY is not available","status":"passed","title":"should not set raw mode when TTY is not available"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":1,"failureMessages":[],"fullName":"input utilities readSingleChar should handle normal character input in raw mode","status":"passed","title":"should handle normal character input in raw mode"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should handle normal character input in non-raw mode","status":"passed","title":"should handle normal character input in non-raw mode"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should handle Enter key as empty selection","status":"passed","title":"should handle Enter key as empty selection"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should handle newline character as empty selection","status":"passed","title":"should handle newline character as empty selection"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":1,"failureMessages":[],"fullName":"input utilities readSingleChar should handle Ctrl+C by calling process.exit","status":"passed","title":"should handle Ctrl+C by calling process.exit"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should cleanup stdin state after input","status":"passed","title":"should cleanup stdin state after input"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should handle when setRawMode is not available even with TTY","status":"passed","title":"should handle when setRawMode is not available even with TTY"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should convert input to lowercase","status":"passed","title":"should convert input to lowercase"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":1,"failureMessages":[],"fullName":"input utilities readSingleChar should handle empty input properly","status":"passed","title":"should handle empty input properly"},{"ancestorTitles":["input utilities","readSingleChar"],"duration":0,"failureMessages":[],"fullName":"input utilities readSingleChar should handle special characters","status":"passed","title":"should handle special characters"},{"ancestorTitles":["input utilities","edge cases"],"duration":0,"failureMessages":[],"fullName":"input utilities edge cases should handle multiple rapid inputs","status":"passed","title":"should handle multiple rapid inputs"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185507480,"loadTestEnvironmentEnd":1756185507446,"loadTestEnvironmentStart":1756185507444,"runtime":34,"setupAfterEnvEnd":1756185507470,"setupAfterEnvStart":1756185507456,"setupFilesEnd":1756185507446,"setupFilesStart":1756185507446,"slow":false,"start":1756185507446},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/unit/utils/dependencies.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["dependencies utilities","checkCommandExists"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkCommandExists should return true when command exists","status":"passed","title":"should return true when command exists"},{"ancestorTitles":["dependencies utilities","checkCommandExists"],"duration":1,"failureMessages":[],"fullName":"dependencies utilities checkCommandExists should return false when command does not exist","status":"passed","title":"should return false when command does not exist"},{"ancestorTitles":["dependencies utilities","checkCommandExists"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkCommandExists should return false when spawn encounters an error","status":"passed","title":"should return false when spawn encounters an error"},{"ancestorTitles":["dependencies utilities","checkCommandExists"],"duration":1,"failureMessages":[],"fullName":"dependencies utilities checkCommandExists should handle both error and close events correctly","status":"passed","title":"should handle both error and close events correctly"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should return empty array when all dependencies are available","status":"passed","title":"should return empty array when all dependencies are available"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should identify missing dependencies","status":"passed","title":"should identify missing dependencies"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":1,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should group servers by command to avoid duplicate checks","status":"passed","title":"should group servers by command to avoid duplicate checks"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should skip non-stdio servers","status":"passed","title":"should skip non-stdio servers"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should skip servers without command","status":"passed","title":"should skip servers without command"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should handle servers without names","status":"passed","title":"should handle servers without names"},{"ancestorTitles":["dependencies utilities","checkMcpDependencies"],"duration":1,"failureMessages":[],"fullName":"dependencies utilities checkMcpDependencies should provide correct install instructions for known commands","status":"passed","title":"should provide correct install instructions for known commands"},{"ancestorTitles":["dependencies utilities","displayMissingDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities displayMissingDependencies should not display anything when no missing dependencies","status":"passed","title":"should not display anything when no missing dependencies"},{"ancestorTitles":["dependencies utilities","displayMissingDependencies"],"duration":1,"failureMessages":[],"fullName":"dependencies utilities displayMissingDependencies should display missing dependencies with proper formatting","status":"passed","title":"should display missing dependencies with proper formatting"},{"ancestorTitles":["dependencies utilities","displayMissingDependencies"],"duration":0,"failureMessages":[],"fullName":"dependencies utilities displayMissingDependencies should handle single missing dependency","status":"passed","title":"should handle single missing dependency"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185508215,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506879,"runtime":1203,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/performance/benchmark.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Performance Benchmarks","Stack Operations Performance"],"duration":256,"failureMessages":[],"fullName":"Performance Benchmarks Stack Operations Performance should create stacks efficiently","status":"passed","title":"should create stacks efficiently"},{"ancestorTitles":["Performance Benchmarks","Stack Operations Performance"],"duration":22,"failureMessages":[],"fullName":"Performance Benchmarks Stack Operations Performance should handle large file collections efficiently","status":"passed","title":"should handle large file collections efficiently"},{"ancestorTitles":["Performance Benchmarks","Stack Operations Performance"],"duration":3,"failureMessages":[],"fullName":"Performance Benchmarks Stack Operations Performance should search through large stack collections efficiently","status":"passed","title":"should search through large stack collections efficiently"},{"ancestorTitles":["Performance Benchmarks","File System Operations Performance"],"duration":15,"failureMessages":[],"fullName":"Performance Benchmarks File System Operations Performance should read multiple files concurrently","status":"passed","title":"should read multiple files concurrently"},{"ancestorTitles":["Performance Benchmarks","File System Operations Performance"],"duration":18,"failureMessages":[],"fullName":"Performance Benchmarks File System Operations Performance should handle directory scanning efficiently","status":"passed","title":"should handle directory scanning efficiently"},{"ancestorTitles":["Performance Benchmarks","Memory Usage Performance"],"duration":121,"failureMessages":[],"fullName":"Performance Benchmarks Memory Usage Performance should handle large objects without memory leaks","status":"passed","title":"should handle large objects without memory leaks"},{"ancestorTitles":["Performance Benchmarks","Memory Usage Performance"],"duration":0,"failureMessages":[],"fullName":"Performance Benchmarks Memory Usage Performance should efficiently handle string concatenation operations","status":"passed","title":"should efficiently handle string concatenation operations"},{"ancestorTitles":["Performance Benchmarks","Network Operations Performance"],"duration":557,"failureMessages":[],"fullName":"Performance Benchmarks Network Operations Performance should handle multiple API requests efficiently","status":"passed","title":"should handle multiple API requests efficiently"},{"ancestorTitles":["Performance Benchmarks","Algorithm Performance"],"duration":9,"failureMessages":[],"fullName":"Performance Benchmarks Algorithm Performance should sort large arrays efficiently","status":"passed","title":"should sort large arrays efficiently"},{"ancestorTitles":["Performance Benchmarks","Algorithm Performance"],"duration":9,"failureMessages":[],"fullName":"Performance Benchmarks Algorithm Performance should filter large datasets efficiently","status":"passed","title":"should filter large datasets efficiently"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756185508252,"loadTestEnvironmentEnd":1756185507012,"loadTestEnvironmentStart":1756185506880,"runtime":1240,"setupAfterEnvEnd":1756185507197,"setupAfterEnvStart":1756185507155,"setupFilesEnd":1756185507012,"setupFilesStart":1756185507012,"slow":false,"start":1756185507012},"testFilePath":"/Users/dtannen/Code/claude-stacks/tests/e2e/cli-workflows.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CLI End-to-End Workflows","Stack Export Workflow"],"duration":125,"failureMessages":[],"fullName":"CLI End-to-End Workflows Stack Export Workflow should export current project as stack","status":"passed","title":"should export current project as stack"},{"ancestorTitles":["CLI End-to-End Workflows","Stack Export Workflow"],"duration":126,"failureMessages":[],"fullName":"CLI End-to-End Workflows Stack Export Workflow should export from project with basic structure","status":"passed","title":"should export from project with basic structure"},{"ancestorTitles":["CLI End-to-End Workflows","Stack Restore Workflow"],"duration":162,"failureMessages":[],"fullName":"CLI End-to-End Workflows Stack Restore Workflow should restore stack from ~/.claude/stacks/","status":"passed","title":"should restore stack from ~/.claude/stacks/"},{"ancestorTitles":["CLI End-to-End Workflows","Stack Management Workflow"],"duration":244,"failureMessages":[],"fullName":"CLI End-to-End Workflows Stack Management Workflow should list available stacks when they exist","status":"passed","title":"should list available stacks when they exist"},{"ancestorTitles":["CLI End-to-End Workflows","Stack Management Workflow"],"duration":75,"failureMessages":[],"fullName":"CLI End-to-End Workflows Stack Management Workflow should handle empty stacks directory","status":"passed","title":"should handle empty stacks directory"},{"ancestorTitles":["CLI End-to-End Workflows","Remote Operations Workflow"],"duration":73,"failureMessages":[],"fullName":"CLI End-to-End Workflows Remote Operations Workflow should handle browse command","status":"passed","title":"should handle browse command"},{"ancestorTitles":["CLI End-to-End Workflows","Error Handling and Edge Cases"],"duration":81,"failureMessages":[],"fullName":"CLI End-to-End Workflows Error Handling and Edge Cases should handle invalid export parameters","status":"passed","title":"should handle invalid export parameters"},{"ancestorTitles":["CLI End-to-End Workflows","Performance Tests"],"duration":88,"failureMessages":[],"fullName":"CLI End-to-End Workflows Performance Tests should handle export operation in reasonable time","status":"passed","title":"should handle export operation in reasonable time"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["src/**/*.ts","!src/**/*.d.ts","!src/cli.ts","!src/types/**/*","!src/**/__tests__/**","!src/**/*.test.ts","!src/**/*.spec.ts"],"coverageDirectory":"/Users/dtannen/Code/claude-stacks/coverage","coverageProvider":"babel","coverageReporters":["text","text-summary","html","lcov","json","clover"],"coverageThreshold":{"global":{"statements":70,"branches":65,"functions":75,"lines":70},"./src/services/":{"statements":85,"branches":80,"functions":90,"lines":85},"./src/controllers/":{"statements":85,"branches":80,"functions":90,"lines":85},"./src/utils/":{"statements":80,"branches":75,"functions":85,"lines":80}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"/Users/dtannen/Code/claude-stacks/tests/setup/global-setup.ts","globalTeardown":"/Users/dtannen/Code/claude-stacks/tests/setup/global-teardown.ts","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/dtannen/Code/claude-stacks/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"report.html","expand":true,"hideIcon":false,"pageTitle":"Claude Stacks Test Report"}]],"rootDir":"/Users/dtannen/Code/claude-stacks","runInBand":false,"runTestsByPath":false,"seed":480187545,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"/Users/dtannen/Code/claude-stacks/node_modules/@jest/test-sequencer/build/index.js","testTimeout":10000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchPlugins":[{"config":{},"path":"/Users/dtannen/Code/claude-stacks/node_modules/jest-watch-typeahead/build/file_name_plugin/plugin.js"},{"config":{},"path":"/Users/dtannen/Code/claude-stacks/node_modules/jest-watch-typeahead/build/test_name_plugin/plugin.js"}],"watchman":true,"workerThreads":false,"coverageLinkPath":"../lcov-report/index.html"},"endTime":1756185508788,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"report.html","expand":true,"pageTitle":"Claude Stacks Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})